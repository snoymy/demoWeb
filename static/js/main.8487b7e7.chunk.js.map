{"version":3,"sources":["components/pages/sales/content/openPaperBagOrderForm/NameForm.module.css","components/pages/sales/content/openPaperBagOrderForm/PaperBagOrderForm.module.css","components/ui/modal/Modal.module.css","components/pages/sales/content/openPaperBagOrderForm/OpenPaperBagOrderForm.module.css","components/pages/login/Login.js","components/ui/banner/Banner.js","components/ui/navbar/Navbar.js","components/pages/sales/content/openPaperBagOrderForm/PaperBagOrderForm.js","components/ui/modal/Modal.js","MockDatabase.js","components/pages/sales/content/openPaperBagOrderForm/NameForm.js","components/pages/sales/content/openPaperBagOrderForm/OpenPaperBagOrderForm.js","components/pages/sales/Sales.js","RoutePath.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Login","useState","id","setID","password","setPassword","loginResult","setLoginResult","mockUserData","role","className","type","placeholder","value","onChange","e","target","onClick","trim","status","filter","item","console","log","length","to","Banner","Navbar","menu","map","index","path","text","PaperBagOrder","orderDetails","setOrderDetails","menuValue","onDetailChange","prop","state","subItem","subIndex","editable","styles","style","paddingLeft","paddingRight","name","paperType","disabled","event","menuItem","paperThickness","bagSize","shape","bagEars","min","colorAmount","max","color","baseColorCheck","checked","baseColor","quantity","price","display","document","getElementById","click","border","tempOrderDetails","index_map","removeOrder","textAlign","workType","sell","print","currentTarget","verticalAlign","colSpan","width","height","comment","Modal","content","showModal","dataBase","fname","lname","address","NameForm","nameForm","setNameForm","setShowModal","searchResult","setSearchResult","setFname","setLname","onFormChange","modalContent","padding","temp","DataBase","toLowerCase","overflowY","selectedName","date","onSelectName","marginRight","marginTop","minWidth","OpenPaperBagOrderForm","i","getBagSize","unit","marginBottom","newOrder","alert","Sales","useParams","Content","RoutePath","element","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,uBAAuB,uCAAuC,oCAAoC,oDAAoD,gBAAgB,kC,iBCAxLD,EAAOC,QAAU,CAAC,kBAAkB,2CAA2C,gCAAgC,yDAAyD,uBAAuB,kD,gBCA/LD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,gBAAgB,+B,gBCA/DD,EAAOC,QAAU,CAAC,uBAAuB,oDAAoD,oCAAoC,mE,8MCyDlHC,EAtDD,WACV,MAAoBC,mBAAS,IAA7B,mBAAOC,EAAP,KAAWC,EAAX,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAsCJ,oBAAS,kBAAI,wCAAnD,mBAAOK,EAAP,KAAoBC,EAApB,KAEMC,EAAe,CACjB,CACIN,GAAG,OACHE,SAAS,OACTK,KAAK,UAgCb,OACI,qBAAKC,UAAU,qBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uCACA,uBAAOC,KAAK,OAAOC,YAAY,KAAKC,MAAOX,EAAIY,SAAU,SAACC,GAAD,OAAOZ,EAAMY,EAAEC,OAAOH,UAC/E,uBAAOF,KAAK,WAAWC,YAAY,WAAWC,MAAOT,EAAUU,SAAU,SAACC,GAAD,OAAOV,EAAYU,EAAEC,OAAOH,UACrG,wBAAQI,QAlCJ,WACZ,GAAIf,EAAGgB,OAIP,GAAId,EAASc,OAAb,CAOA,IAAMC,EAASX,EAAaY,QAAO,SAACC,GAChC,OAAOA,EAAKnB,KAAOA,GAAMmB,EAAKjB,WAAaA,KAE/CkB,QAAQC,IAAIJ,GACZ,IAAMV,EAAOU,EAAOK,OAAS,EAAIL,EAAO,GAAGV,KAAO,GAK9CF,EADQ,KAATE,EACgB,kBAAM,cAAC,IAAD,CAAUgB,GAAI,IAAMhB,KAG1B,kBAAM,8DAlBrBF,GAAe,kBAAM,8DAJrBA,GAAe,kBAAM,oDAgCjB,mBACA,qBAAKG,UAAU,oBAAf,SAAoCJ,UCxCrCoB,G,MAVA,SAAC,GAAY,IAAXjB,EAAU,EAAVA,KACb,OACI,sBAAKC,UAAU,aAAf,UACI,mBAAGA,UAAU,0BAAb,2BACA,mBAAGA,UAAU,kBAAb,oBACA,mBAAGA,UAAU,kBAAb,SAAgCD,S,OCM7BkB,G,MAVA,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACb,OACI,qBAAKlB,UAAU,aAAf,SACI,6BACKkB,EAAKC,KAAI,SAACR,EAAMS,GAAP,OAAiB,6BAAgB,cAAC,IAAD,CAAML,GAAIJ,EAAKU,KAAf,SAAsBV,EAAKW,QAAlCF,Y,sCC4LrCG,EAhMO,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,gBAAiBC,EAAe,EAAfA,UAc7CC,EAAiB,SAACxB,EAAOiB,EAAOQ,GAAsB,IAAhBC,IAAe,yDACvDjB,QAAQC,IAAIV,GACZsB,EAAgBD,EAAaL,KACrB,SAACW,EAASC,GACN,OAAGX,IAAUW,EAAiB,eAAID,GAC3B,2BAAIA,GAAX,kBAAqBF,EAAO,CAACzB,MAAMA,EAAO6B,SAASH,UAMnE,OACI,qBAAK7B,UAAWiC,IAAO,mBAAvB,SACI,kCACI,gCACI,+BACI,6BAAI,uBAAOC,MAAO,CAACC,YAAY,OAAQC,aAAa,QAAhD,gEACJ,6BAAI,mGACJ,6BAAI,2HACJ,6BAAI,iFACJ,6BAAI,yDACJ,6BAAI,qEACJ,6BAAI,+GACJ,6BAAI,mDACJ,6BAAI,uFACJ,6BAAI,2EACJ,6BAAI,qEACJ,6BAAI,+DACJ,6BAAI,2EACJ,6BAAI,iCAIZ,kCACI,6BAAI,6BAAI,6CACXZ,EAAaL,KAAI,SAACR,EAAMS,GAErB,OADAR,QAAQC,IAAI,MAAOF,GAEf,eAAC,WAAD,WACA,+BACI,6BACI,uBAAOuB,MAAO,CAACC,YAAY,OAAQC,aAAa,QAAhD,SAA0DhB,EAAM,MAEpE,6BACI,wBAAQiB,KAAK,YAAY7C,GAAG,YAAYW,MAAOQ,EAAK2B,UAAUnC,MAAOoC,UAAW5B,EAAK2B,UAAUN,SAAU5B,SAAU,SAACoC,GAAD,OAAWb,EAAea,EAAMlC,OAAOH,MAAOiB,EAAO,cAAxK,SAEQM,EAAUY,UAAUnB,KAAI,SAACsB,EAAUV,GAC/B,OACI,wBAAuB5B,MAAOsC,EAA9B,SAAyCA,GAA5BV,UAMjC,6BACI,wBAAQM,KAAK,iBAAiB7C,GAAG,iBAAiBW,MAAOQ,EAAK+B,eAAevC,MAAOoC,UAAW5B,EAAK+B,eAAeV,SAAU5B,SAAU,SAACoC,GAAD,OAAWb,EAAea,EAAMlC,OAAOH,MAAOiB,EAAO,mBAA5L,SAEQM,EAAUgB,eAAevB,KAAI,SAACsB,EAAUV,GACpC,OACI,wBAAuB5B,MAAOsC,EAA9B,SAAyCA,GAA5BV,UAMjC,6BACI,wBAAQM,KAAK,UAAU7C,GAAG,UAAUW,MAAOQ,EAAKgC,QAAQxC,MAAOoC,UAAW5B,EAAKgC,QAAQX,SAAU5B,SAAU,SAACoC,GAAD,OAAWb,EAAea,EAAMlC,OAAOH,MAAOiB,EAAO,YAAhK,SAEQM,EAAUiB,QAAQxB,KAAI,SAACsB,EAAUV,GAC7B,OACI,wBAAuB5B,MAAOsC,EAA9B,SAAyCA,GAA5BV,UAMjC,6BACI,wBAAQM,KAAK,QAAQ7C,GAAG,QAAQW,MAAOQ,EAAKiC,MAAMzC,MAAOoC,UAAW5B,EAAKiC,MAAMZ,SAAU5B,SAAU,SAACoC,GAAD,OAAWb,EAAea,EAAMlC,OAAOH,MAAOiB,EAAO,UAAxJ,SAEQM,EAAUkB,MAAMzB,KAAI,SAACsB,EAAUV,GAC3B,OACI,wBAAuB5B,MAAOsC,EAA9B,SAAyCA,GAA5BV,UAMjC,6BACI,wBAAQM,KAAK,UAAU7C,GAAG,UAAUW,MAAOQ,EAAKkC,QAAQ1C,MAAOoC,UAAW5B,EAAKkC,QAAQb,SAAU5B,SAAU,SAACoC,GAAD,OAAWb,EAAea,EAAMlC,OAAOH,MAAOiB,EAAO,YAAhK,SAEQM,EAAUmB,QAAQ1B,KAAI,SAACsB,EAAUV,GAC7B,OACI,wBAAuB5B,MAAOsC,EAA9B,SAAyCA,GAA5BV,UAMjC,6BACI,uBAAO9B,KAAK,SAAS6C,IAAKpB,EAAUqB,YAAYD,IAAKE,IAAKtB,EAAUqB,YAAYC,IAAKX,KAAK,cAAc7C,GAAG,cAAcW,MAAOQ,EAAKoC,YAAY5C,MAAOoC,UAAW5B,EAAKoC,YAAYf,SAAU5B,SAAU,SAACoC,GAAD,OAAWb,EAAea,EAAMlC,OAAOH,MAAOiB,EAAO,oBAEjQ,6BACI,uBAAOnB,KAAK,OAAOoC,KAAK,QAAQ7C,GAAG,QAAQU,YAAY,uCAASC,MAAOQ,EAAKsC,MAAM9C,MAAOoC,UAAW5B,EAAKsC,MAAMjB,SAAU5B,SAAU,SAACoC,GAAD,OAAWb,EAAea,EAAMlC,OAAOH,MAAOiB,EAAO,cAE5L,6BACI,uBAAOnB,KAAK,WAAWoC,KAAK,iBAAiB7C,GAAG,iBAAiBW,MAAOQ,EAAKuC,eAAe/C,MAAOoC,UAAW5B,EAAKuC,eAAelB,SAAU5B,SAAU,SAACoC,GACvJb,EAAea,EAAMlC,OAAO6C,QAAS/B,EAAO,kBAC5CO,EAAehB,EAAKyC,UAAWhC,EAAO,YAAaoB,EAAMlC,OAAO6C,cAKpE,6BACI,wBAAQd,KAAK,YAAY7C,GAAG,YAAYW,MAAOQ,EAAKyC,UAAUjD,MAAOoC,UAAW5B,EAAKyC,UAAUpB,SAAU5B,SAAU,SAACoC,GAAD,OAAWb,EAAea,EAAMlC,OAAOH,MAAOiB,EAAO,cAAxK,SAEQM,EAAU0B,UAAUjC,KAAI,SAACsB,EAAUV,GAC/B,OACI,wBAAuB5B,MAAOsC,EAA9B,SAAyCA,GAA5BV,UAMjC,6BACI,uBAAO9B,KAAK,SAAS6C,IAAKpB,EAAU2B,SAASP,IAAKT,KAAK,WAAW7C,GAAG,WAAWW,MAAOQ,EAAK0C,SAASlD,MAAOoC,UAAW5B,EAAK0C,SAASrB,SAAU5B,SAAU,SAACoC,GAAD,OAAWb,EAAea,EAAMlC,OAAOH,MAAOiB,EAAO,iBAElN,6BACI,uBAAOnB,KAAK,SAAS6C,IAAKpB,EAAU2B,SAASP,IAAKT,KAAK,QAAQ7C,GAAG,QAAQW,MAAOQ,EAAK2C,MAAMnD,MAAOoC,UAAW5B,EAAK2C,MAAMtB,SAAU5B,SAAU,SAACoC,GAAD,OAAWb,EAAea,EAAMlC,OAAOH,MAAOiB,EAAO,cAEtM,+BACI,uBAAOnB,KAAK,OAAOT,GAAG,cAAc0C,MAAO,CAACqB,QAAQ,UACpD,wBAAQtD,KAAK,SAASM,QAAS,kBAAIiD,SAASC,eAAe,eAAeC,SAA1E,uBAEJ,6BACI,wBAAQ1D,UAAWiC,IAAO,iCAAkChC,KAAK,SAASiC,MAAO,CAACyB,OAAO,QAASpD,QAAS,kBAnJnH,SAACa,GACjB,IAAIwC,EAAmB,GAEvBpC,EAAaL,KAAI,SAACR,EAAMkD,GACpB,GAAGA,IAAczC,EAEb,OADAR,QAAQC,IAAI,SAAUF,GACfiD,EAAgB,sBAAOA,GAAP,CAAyBjD,OAGxDC,QAAQC,IAAI,QAAS+C,GACrBnC,EAAgBmC,GAyIuHE,CAAY1C,IAA3H,oBAGR,+BACI,6BACI,4BAEJ,oBAAIc,MAAO,CAAC6B,UAAU,QAAS3B,aAAa,KAA5C,SACI,2EAEJ,oBAAIF,MAAO,CAAC6B,UAAU,OAAQ5B,YAAY,KAA1C,SACI,uBAAOlC,KAAK,QAAQoC,KAAM,WAAWjB,EAAO5B,GAAG,WAAW2D,QAASxC,EAAKqD,SAAS7D,QAAUuB,EAAUsC,SAASC,KAAK,UAAU,GAAI9D,MAAOuB,EAAUsC,SAASC,KAAM1B,UAAW5B,EAAKqD,SAAShC,SAAU5B,SAAU,SAACoC,GAAD,OAAWb,EAAea,EAAMlC,OAAOH,MAAOiB,EAAO,iBAEvQ,oBAAIc,MAAO,CAAC6B,UAAU,QAAS3B,aAAa,KAA5C,SACI,uFAEJ,oBAAIF,MAAO,CAAC6B,UAAU,OAAQ5B,YAAY,KAA1C,SACI,uBAAOlC,KAAK,QAAQoC,KAAM,WAAWjB,EAAO5B,GAAG,WAAW2D,QAASxC,EAAKqD,SAAS7D,QAAUuB,EAAUsC,SAASE,MAAM,UAAU,GAAI/D,MAAOuB,EAAUsC,SAASE,MAAO3B,UAAW5B,EAAKqD,SAAShC,SAAU5B,SAAU,SAACoC,GAAD,OAAWb,EAAea,EAAM2B,cAAchE,MAAOiB,EAAO,iBAEhR,oBAAIc,MAAO,GAAX,SACI,+CAEJ,oBAAIA,MAAO,CAAC6B,UAAU,OAAQK,cAAe,OAAQC,QAAQ,IAA7D,SACI,0BAAUnC,MAAO,CAACoC,MAAM,OAAQC,OAAO,QAASpE,MAAOQ,EAAK6D,QAAQrE,MAAOoC,UAAW5B,EAAK6D,QAAQxC,SAAU5B,SAAU,SAACoC,GAAD,OAAWb,EAAea,EAAMlC,OAAOH,MAAOiB,EAAO,mBAGpL,+BACI,6BACI,4BAEJ,oBAAIiD,QAAQ,KAAZ,SAAiB,yBACjB,6BACI,iCAhIOjD,e,iBCtCxBqD,EAfD,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,QAEZ,OAFoC,EAAfC,UAOjB,qBAAK3E,UAAWiC,IAAM,MAAtB,SACI,qBAAKjC,UAAWiC,IAAO,iBAAvB,SACKyC,MANF,M,iBCLXE,EACU,CAAC,SAAU,UADrBA,EAES,CACL,CACIC,MAAM,YACNC,MAAM,QACNC,QAAQ,uCAEZ,CACIF,MAAM,YACNC,MAAM,QACNC,QAAQ,wCAgBL,EARM,WAClB,OAAOH,GAOK,EAJK,WAChB,OAAOA,GCyIII,EA5JE,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YACzB,EAAkC3F,oBAAS,GAA3C,mBAAOoF,EAAP,KAAkBQ,EAAlB,KACA,EAAwC5F,mBAAS,IAAjD,mBAAO6F,EAAP,KAAqBC,EAArB,KACA,EAA0B9F,mBAAS,IAAnC,mBAAOsF,EAAP,KAAcS,EAAd,KACA,EAA0B/F,mBAAS,IAAnC,mBAAOuF,EAAP,KAAcS,EAAd,KACA,EAAwBhG,mBAAS,IAAjC,mBAEMiG,GAFN,UAEqB,SAAChD,EAAOZ,GACzBhB,QAAQC,IAAI2B,EAAMlC,OAAOH,OACzB+E,EAAY,2BAAID,GAAL,kBAAgBrD,EAAM,CAACzB,MAAMqC,EAAMlC,OAAOH,MAAO6B,UAAS,QAuCnEyD,EACF,sBAAKvD,MAAO,CAACwD,QAAQ,QAArB,UACI,gCACI,gCACI,+BACI,6BAAI,6FACJ,6BACI,uBAAOzF,KAAK,OAAOE,MAAO0E,EAAOzE,SAAU,SAACoC,GAAD,OAAW8C,EAAS9C,EAAMlC,OAAOH,YAEhF,6BAAI,+DACJ,6BACI,uBAAOF,KAAK,OAAOE,MAAO2E,EAAO1E,SAAU,SAACoC,GAAD,OAAW+C,EAAS/C,EAAMlC,OAAOH,YAEhF,wBAAQF,KAAK,SAASM,QA5BxB,WACd,IAAIoF,EAAO,GACUC,IACRzE,KAAI,SAACR,GACD,KAAVkE,GACc,KAAVC,GACInE,EAAKkE,MAAMgB,gBAAkBhB,EAAMgB,eAAiBlF,EAAKmE,MAAMe,gBAAkBf,EAAMe,gBACtFF,EAAI,sBAAOA,GAAP,CAAahF,QAKjC0E,EAAgBM,IAgBA,iCAIZ,qBAAKzD,MAAO,CAACqC,OAAQ,QAASuB,UAAU,UAAxC,SACI,uBAAO9F,UAAWiC,IAAO,iBAAkBC,MAAO,CAACoC,MAAM,QAAzD,SACI,gCAEQc,EAAajE,KAAI,SAACR,EAAMS,GACpB,OACI,qCACA,+BACI,6BACI,+BAAOT,EAAKkE,UAEhB,6BACI,+BAAOlE,EAAKmE,UAEhB,6BACI,sBAAM5C,MAAO,CAACyB,OAAQ,qBAAtB,SAA6ChD,EAAKoE,YAEtD,6BACI,wBAAQ9E,KAAK,SAASM,QAAS,kBA7DlD,SAACI,GACnB,IAAMoF,EAAe,CACjBlB,MAAO,CAAC1E,MAAMQ,EAAKkE,MAAO7C,UAAS,GACnC8C,MAAO,CAAC3E,MAAMQ,EAAKmE,MAAO9C,UAAS,GACnC+C,QAAS,CAAC5E,MAAMQ,EAAKoE,QAAS/C,UAAS,GACvCgE,KAAM,CAAC7F,MAAM8E,EAASe,KAAK7F,MAAO6B,UAAS,IAE9CkD,EAAYa,GACZZ,GAAa,GAqD0Dc,CAAatF,IAAhD,yBAGR,6BACI,oBAAI0D,QAAQ,KAAZ,SAAiB,uCAU7C,qBAAKnC,MAAO,CAAC6B,UAAU,QAASmC,YAAY,OAAQC,UAAU,QAA9D,SACI,wBAAQlG,KAAK,SAASM,QAAS,kBAAM4E,GAAa,IAAlD,wBAKZ,OACI,sBAAKnF,UAAWiC,IAAO,wBAAvB,UACI,gCACI,kCACI,+BACI,6BACI,wBAAQhC,KAAK,SAASM,QAAS,kBAAM4E,GAAa,IAAlD,6BAEJ,oBAAIjD,MAAO,CAAC6B,UAAW,SAAvB,SACI,8FAEJ,6BACI,uBAAO9D,KAAK,OAAOT,GAAG,QAAQ6C,KAAK,QAAQlC,MAAO8E,EAASJ,MAAM1E,MAAOoC,UAAW0C,EAASJ,MAAM7C,SAAU5B,SAAU,SAACoC,GAAD,OAAWgD,EAAahD,EAAO,UAAUN,MAAO,CAACkE,SAAU,aAErL,6BACI,gEAEJ,6BACK,uBAAOnG,KAAK,OAAOT,GAAG,QAAQ6C,KAAK,QAAQlC,MAAO8E,EAASH,MAAM3E,MAAOoC,UAAW0C,EAASH,MAAM9C,SAAU5B,SAAU,SAACoC,GAAD,OAAWgD,EAAahD,EAAO,UAAUN,MAAO,CAACkE,SAAU,aAEtL,6BACI,4EAEJ,6BACI,uBAAOnG,KAAK,OAAOT,GAAG,OAAO6C,KAAK,OAAOlC,MAAO8E,EAASe,KAAK7F,MAAOoC,UAAW0C,EAASe,KAAKhE,SAAU5B,SAAU,SAACoC,GAAD,OAAWgD,EAAahD,EAAO,gBAGzJ,+BACI,6BACI,4BAEJ,oBAAIN,MAAO,CAAC6B,UAAU,QAASK,cAAe,OAA9C,SACI,kFAEJ,oBAAIlC,MAAO,CAAC6B,UAAU,QAASM,QAAQ,IAAvC,SACI,0BAAUnC,MAAO,CAACoC,MAAM,MAAOC,OAAO,SAAStE,KAAK,OAAOT,GAAG,UAAU6C,KAAK,UAAUlC,MAAO8E,EAASF,QAAQ5E,MAAOoC,UAAW0C,EAASF,QAAQ/C,SAAU5B,SAAU,SAACoC,GAAD,OAAWgD,EAAahD,EAAO,gBAEzM,6BACI,4BAEJ,6BACI,wBAAQxC,UAAWiC,IAAO,qCAAsChC,KAAK,SAASM,QApIpF,WAOd2E,EANiB,CACdL,MAAO,CAAC1E,MAAM,GAAI6B,UAAS,GAC3B8C,MAAO,CAAC3E,MAAM,GAAI6B,UAAS,GAC3B+C,QAAS,CAAC5E,MAAM,GAAI6B,UAAS,GAC7BgE,KAAM,CAAC7F,MAAM,GAAK6B,UAAS,MA+HV,kCAOhB,cAAC,EAAD,CAAO0C,QAASe,EAAcd,UAAWA,EAAWQ,aAAcA,Q,iBCvD/DkB,G,MA7Fe,WAC1B,MAAkC9G,oBAAS,GAA3C,mBAAOoF,EAAP,KAAkBQ,EAAlB,KACA,EAAwC5F,mBAAS,IAAjD,mBAAOiC,EAAP,KAAqBC,EAArB,KACA,EAAgClC,mBAAS,CACrCsF,MAAM,CAAC1E,MAAM,GAAI6B,UAAS,GAC1B8C,MAAM,CAAC3E,MAAM,GAAI6B,UAAS,GAC1BgE,KAAK,CAAC7F,MAAM,GAAI6B,UAAS,GACzB+C,QAAQ,CAAC5E,MAAM,GAAI6B,UAAS,KAJhC,mBAAOiD,EAAP,KAAiBC,EAAjB,KAsBMxD,EAAY,CACdY,UAAU,CAAC,KAAM,KAAM,yDAAa,KAAM,OAC1CI,eAAe,CAAC,SAAU,UAC1BC,QAlBe,WAGf,IAFA,IAAIA,EAAU,GAEN2D,EAAI,EAAGA,EAAI,GAAIA,IACnB3D,EAAO,sBAAOA,GAAP,CAAgB,sBAAQ2D,EAAE,KAGrC,OAAO3D,EAWC4D,GACR3D,MAAM,CAAC,2BAAQ,4BACfC,QAAQ,CAAC,uCAAU,+DAAc,6CAAW,0DAC5CE,YAAY,CAACD,IAAI,EAAGE,IAAI,GACxBE,gBAAe,EACfE,UAXOwC,IAYP3C,MAAM,GACNI,SAAS,CAACP,IAAI,GACd0D,KAAK,CAAC,IACNlD,MAAM,CAACR,IAAI,GACX0B,QAAQ,GACRR,SAAS,CAACC,KAAK,OAAQC,MAAM,UA2BjC,OACI,qBAAKhC,MAAO,CAACuE,aAAa,SAA1B,SASI,sBAAKzG,UAAWiC,IAAO,wBAAvB,UACI,iCAAQ,iJACR,sBAAKjC,UAAU,YAAf,UACI,cAAC,EAAD,CAAUiF,SAAUA,EAAUC,YAAaA,IAC3C,cAAC,EAAD,CAAe1D,aAAcA,EAAcC,gBAAiBA,EAAiBC,UAAWA,IAExF,wBAAQzB,KAAK,SAASM,QAxClB,WAChB,IAAImG,EAAW,CACXpE,UAAW,CAACnC,MAAMuB,EAAUY,UAAU,GAAIN,UAAS,GACnDU,eAAgB,CAACvC,MAAMuB,EAAUgB,eAAe,GAAIV,UAAS,GAC7DW,QAAS,CAACxC,MAAMuB,EAAUiB,QAAQ,GAAIX,UAAS,GAC/CY,MAAO,CAACzC,MAAMuB,EAAUkB,MAAM,GAAIZ,UAAS,GAC3Ca,QAAS,CAAC1C,MAAMuB,EAAUmB,QAAQ,GAAIb,UAAS,GAC/Ce,YAAa,CAAC5C,MAAMuB,EAAUqB,YAAYD,IAAKd,UAAS,GACxDkB,eAAgB,CAAC/C,MAAMuB,EAAUwB,eAAgBlB,UAAS,GAC1DoB,UAAW,CAACjD,MAAMuB,EAAU0B,UAAU,GAAIpB,UAAS,GACnDiB,MAAO,CAAC9C,MAAMuB,EAAUuB,MAAOjB,UAAS,GACxCqB,SAAU,CAAClD,MAAMuB,EAAU2B,SAASP,IAAKd,UAAS,GAClDsB,MAAO,CAACnD,MAAMuB,EAAU4B,MAAMR,IAAKd,UAAS,GAC5CgC,SAAU,CAAC7D,MAAMuB,EAAUsC,SAASC,KAAMjC,UAAS,GACnDwC,QAAS,CAACrE,MAAMuB,EAAU8C,QAASxC,UAAS,IAGhDP,EAAgB,GAAD,mBAAKD,GAAL,CAAmBkF,MAuBtB,wBACA,wBAAQzG,KAAK,SAASM,QAAS,kBAAM4E,GAAa,IAAlD,2BACA,wBAAQnF,UAAWiC,IAAO,qCAAsChC,KAAK,SAASM,QAtB5E,WACdkB,EAAgB,KAqBJ,6BACA,wBAAQxB,KAAK,SAASM,QAAS,WAAOoG,MAAM,YAA5C,wBAEJ,cAAC,EAAD,CAAOhC,UAAWA,EAAWQ,aAAcA,WCzC5CyB,EAjDD,WACV,IAAO3G,EAAQ4G,cAAR5G,KACPW,QAAQC,IAAIZ,GAEZ,IAAM6G,EAAU,WACZ,MACS,UADF7G,EAGK,cAAC,EAAD,IAIA,8BAKhB,OACI,qCACI,cAAC,EAAD,CAAQF,KAAK,UACb,cAAC,EAAD,CACImB,KAAM,CACF,CACIG,KAAK,SACLC,KAAK,0BAET,CACID,KAAK,eACLC,KAAK,wBAET,CACID,KAAK,SACLC,KAAK,gBAET,CACID,KAAK,SACLC,KAAK,wBAET,CACID,KAAK,SACLC,KAAK,2BAIjB,cAACwF,EAAD,QC7CNC,EAAY,WACd,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO1F,KAAK,SAAS2F,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAO3F,KAAK,eAAe2F,QAAS,cAAC,EAAD,MACpC,cAAC,IAAD,CAAO3F,KAAK,SAAS2F,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAO3F,KAAK,IAAI2F,QAAS,cAAC,IAAD,CAAUjG,GAAG,gBCGnCkG,EAVH,WACR,OACI,mCACI,cAAC,IAAD,UACI,cAAC,EAAD,SCKDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACQ,cAAC,EAAD,MAERrE,SAASC,eAAe,SAM1ByD,M","file":"static/js/main.8487b7e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper-bag-order-form\":\"NameForm_paper-bag-order-form__3Iw-T\",\"paper-bag-order-form-clear-button\":\"NameForm_paper-bag-order-form-clear-button__2iMKn\",\"modal-content\":\"NameForm_modal-content__1VBrO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper-bag-order\":\"PaperBagOrderForm_paper-bag-order__2XlDh\",\"paper-bag-order-delete-button\":\"PaperBagOrderForm_paper-bag-order-delete-button__3GoL0\",\"paper-bag-order-form\":\"PaperBagOrderForm_paper-bag-order-form__15wNL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__Jy8Gn\",\"modal-content\":\"Modal_modal-content__muvdq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper-bag-order-form\":\"OpenPaperBagOrderForm_paper-bag-order-form__2gxni\",\"paper-bag-order-form-clear-button\":\"OpenPaperBagOrderForm_paper-bag-order-form-clear-button__387-G\"};","import {useState} from \"react\"\nimport \"./Login.css\"\nimport {RoutePath, Navigate} from \"../../../RoutePath\"\n\nconst Login = () => {\n    const [id, setID] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [loginResult, setLoginResult] = useState(()=><p>&nbsp;</p>)\n\n    const mockUserData = [\n        {\n            id:\"user\",\n            password:\"pass\",\n            role:\"sales\"\n        }\n    ]\n\n    const onLogin = () => {\n        if(!id.trim()){\n            setLoginResult(() => <p>Please Enter ID</p>)\n            return\n        }\n        if(!password.trim()){\n            setLoginResult(() => <p>Please Enter Password</p>)\n            return\n        }\n\n        // mock up\n\n        const status = mockUserData.filter((item) => {\n            return item.id === id && item.password === password;\n        })\n        console.log(status)\n        const role = status.length > 0 ? status[0].role : \"\" \n\n        // end mockup\n        \n        if(role !== \"\"){\n            setLoginResult(() => <Navigate to={\"/\" + role}/>)\n        }\n        else{\n            setLoginResult(() => <p>Invalid ID or Password</p>)\n        }\n    }\n\n    return (\n        <div className=\"login-form-wrapper\">\n            <div className=\"login-form\">\n                <h1>Login</h1>\n                <input type=\"text\" placeholder=\"ID\" value={id} onChange={(e) => setID(e.target.value)}/>\n                <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\n                <button onClick={onLogin}>Login</button>\n                <div className=\"login-form-result\">{loginResult}</div>  \n            </div>\n        </div>\n    )\n}\n\nexport default Login;\n\n","import \"./Banner.css\"\n\nconst Banner = ({role}) => {\n    return (\n        <div className=\"top-banner\">\n            <p className=\"top-banner-company-name\">Friendly Bags</p>\n            <p className=\"top-banner-role\">•</p>\n            <p className=\"top-banner-role\">{role}</p>\n        </div> \n    )\n}\n\nexport default Banner;\n","import {Link} from \"react-router-dom\";\nimport \"./Navbar.css\"\n\nconst Navbar = ({menu}) => {\n    return (\n        <div className=\"top-navbar\">\n            <ul>\n                {menu.map((item, index) => <li key={index}><Link to={item.path}>{item.text}</Link></li>)}\n            </ul>\n        </div>\n    )\n}\n\nexport default Navbar;\n","import { Fragment } from \"react\" \nimport styles from \"./PaperBagOrderForm.module.css\"\n\nconst PaperBagOrder = ({orderDetails, setOrderDetails, menuValue}) => {\n    const removeOrder = (index) => {\n        let tempOrderDetails = []\n\n        orderDetails.map((item, index_map) => {\n            if(index_map !== index){\n                console.log(\"before\", item)\n                return tempOrderDetails = [...tempOrderDetails, item]\n            }\n        })\n        console.log(\"after\", tempOrderDetails)\n        setOrderDetails(tempOrderDetails)\n    }\n\n    const onDetailChange = (value, index, prop, state=true) => {\n        console.log(value)\n        setOrderDetails(orderDetails.map(\n                (subItem, subIndex) => {\n                    if(index !== subIndex) return {...subItem}\n                    return {...subItem, [prop]: {value:value, editable:state}}\n                }\n            )\n        )\n    }\n\n    return (\n        <div className={styles[\"paper-bag-order\"]}>\n            <table>\n                <thead>\n                    <tr>\n                        <th><label style={{paddingLeft:\"10px\", paddingRight:\"10px\"}}>ลำดับที่</label></th>\n                        <th><label>ชนิดกระดาษ</label></th>\n                        <th><label>ความหน้ากระดาษ</label></th>\n                        <th><label>ขนาดถุง</label></th>\n                        <th><label>ทรง</label></th>\n                        <th><label>หูถุง</label></th>\n                        <th><label>จำนวนสีพิมพ์</label></th>\n                        <th><label>สี</label></th>\n                        <th><label>ย้อมพื้น</label></th>\n                        <th><label>สีย้อม</label></th>\n                        <th><label>จำนวน</label></th>\n                        <th><label>ราคา</label></th>\n                        <th><label>แนบแบบ</label></th>\n                        <th><label></label></th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    <tr><td><label>&nbsp;</label></td></tr>\n                {orderDetails.map((item, index) => {\n                    console.log(\"map\", item)\n                    return (\n                        <Fragment key={index}>\n                        <tr>\n                            <td>\n                                <label style={{paddingLeft:\"10px\", paddingRight:\"10px\"}}>{index+1}</label>\n                            </td>\n                            <td>\n                                <select name=\"paperType\" id=\"paperType\" value={item.paperType.value} disabled={!item.paperType.editable} onChange={(event) => onDetailChange(event.target.value, index, \"paperType\")}>\n                                    {\n                                        menuValue.paperType.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}>{menuItem}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </td>\n                            <td>\n                                <select name=\"paperThickness\" id=\"paperThickness\" value={item.paperThickness.value} disabled={!item.paperThickness.editable} onChange={(event) => onDetailChange(event.target.value, index, \"paperThickness\")}>\n                                    {\n                                        menuValue.paperThickness.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}>{menuItem}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </td>\n                            <td>\n                                <select name=\"bagSize\" id=\"bagSize\" value={item.bagSize.value} disabled={!item.bagSize.editable} onChange={(event) => onDetailChange(event.target.value, index, \"bagSize\")}>\n                                    {\n                                        menuValue.bagSize.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}>{menuItem}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </td>\n                            <td>\n                                <select name=\"shape\" id=\"shape\" value={item.shape.value} disabled={!item.shape.editable} onChange={(event) => onDetailChange(event.target.value, index, \"shape\")}>\n                                    {\n                                        menuValue.shape.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}>{menuItem}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </td>\n                            <td>\n                                <select name=\"bagEars\" id=\"bagEars\" value={item.bagEars.value} disabled={!item.bagEars.editable} onChange={(event) => onDetailChange(event.target.value, index, \"bagEars\")}>\n                                    {\n                                        menuValue.bagEars.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}>{menuItem}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </td>\n                            <td>\n                                <input type=\"number\" min={menuValue.colorAmount.min} max={menuValue.colorAmount.max} name=\"colorAmount\" id=\"colorAmount\" value={item.colorAmount.value} disabled={!item.colorAmount.editable} onChange={(event) => onDetailChange(event.target.value, index, \"colorAmount\")}/>\n                            </td>\n                            <td>\n                                <input type=\"text\" name=\"color\" id=\"color\" placeholder=\"ระบุสี\" value={item.color.value} disabled={!item.color.editable} onChange={(event) => onDetailChange(event.target.value, index, \"color\")}/>\n                            </td>\n                            <td>\n                                <input type=\"checkbox\" name=\"baseColorCheck\" id=\"baseColorCheck\" value={item.baseColorCheck.value} disabled={!item.baseColorCheck.editable} onChange={(event) => {\n                                onDetailChange(event.target.checked, index, \"baseColorCheck\")\n                                onDetailChange(item.baseColor, index, \"baseColor\", event.target.checked)\n                                }\n                            }\n                            />\n                            </td>\n                            <td>\n                                <select name=\"baseColor\" id=\"baseColor\" value={item.baseColor.value} disabled={!item.baseColor.editable} onChange={(event) => onDetailChange(event.target.value, index, \"baseColor\")}>\n                                    {\n                                        menuValue.baseColor.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}>{menuItem}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </td>\n                            <td>\n                                <input type=\"number\" min={menuValue.quantity.min} name=\"quantity\" id=\"quantity\" value={item.quantity.value} disabled={!item.quantity.editable} onChange={(event) => onDetailChange(event.target.value, index, \"quantity\")}/>\n                            </td>\n                            <td>\n                                <input type=\"number\" min={menuValue.quantity.min} name=\"price\" id=\"price\" value={item.price.value} disabled={!item.price.editable} onChange={(event) => onDetailChange(event.target.value, index, \"price\")}/>\n                            </td>\n                            <td>\n                                <input type=\"file\" id=\"file-upload\" style={{display:\"none\"}}/>\n                                <button type=\"button\" onClick={()=>document.getElementById(\"file-upload\").click()}>Upload</button>\n                            </td>\n                            <td>\n                                <button className={styles[\"paper-bag-order-delete-button\"]} type=\"button\" style={{border:\"none\"}} onClick={()=>removeOrder(index)}>X</button>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label></label>\n                            </td>\n                            <td style={{textAlign:\"right\", paddingRight:\"0\"}}>\n                                <label>งานขาย</label>\n                            </td>\n                            <td style={{textAlign:\"left\", paddingLeft:\"0\"}}>\n                                <input type=\"radio\" name={\"workType\"+index} id=\"workType\" checked={item.workType.value === menuValue.workType.sell?\"checked\":\"\"} value={menuValue.workType.sell} disabled={!item.workType.editable} onChange={(event) => onDetailChange(event.target.value, index, \"workType\")}/>\n                            </td>\n                            <td style={{textAlign:\"right\", paddingRight:\"0\"}}>\n                                <label>งานพิมพ์</label>\n                            </td>\n                            <td style={{textAlign:\"left\", paddingLeft:\"0\"}}>\n                                <input type=\"radio\" name={\"workType\"+index} id=\"workType\" checked={item.workType.value === menuValue.workType.print?\"checked\":\"\"} value={menuValue.workType.print} disabled={!item.workType.editable} onChange={(event) => onDetailChange(event.currentTarget.value, index, \"workType\")}/>\n                            </td>\n                            <td style={{}}>\n                                <label>Comment:</label>\n                            </td>\n                            <td style={{textAlign:\"left\", verticalAlign: \"top\"}} colSpan=\"4\">\n                                <textarea style={{width:\"100%\", height:\"70px\"}} value={item.comment.value} disabled={!item.comment.editable} onChange={(event) => onDetailChange(event.target.value, index, \"comment\")}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label></label>\n                            </td>\n                            <td colSpan=\"11\"><hr/></td>\n                            <td>\n                                <label></label>\n                            </td>\n                        </tr>\n                        </Fragment>\n                    )\n                })}\n                </tbody>\n\n            </table>\n        </div>\n    )\n}\nexport default PaperBagOrder;\n","import styles from \"./Modal.module.css\"\n\nconst Modal = ({content, showModal}) => {\n\n    if(!showModal){\n        return null\n    }\n\n    return (\n        <div className={styles[\"modal\"]}>\n            <div className={styles[\"modal-content\"]}>\n                {content}\n            </div>\n        </div>\n    )\n}\n\nexport default Modal;\n","let dataBase = {\n    baseColor:[\"color1\", \"color2\"],\n    customer:[\n        {\n            fname:\"customer1\",\n            lname:\"mock1\",\n            address:\"11/11 road xxx city xxx country xxx\"\n        },\n        {\n            fname:\"customer2\",\n            lname:\"mock2\",\n            address:\"11/11 road xxx city xxx country xxx\"\n        }\n    ],\n    order:[\n\n    ]\n}\n\nconst getBaseColor = () => {\n   return dataBase[\"baseColor\"] \n}\n\nconst getCustomer = () => {\n    return dataBase[\"customer\"]\n}\n\nexport default {getBaseColor, getCustomer}\n","import { useState } from \"react\"\nimport Modal from \"../../../../ui/modal/Modal\"\nimport styles from \"./NameForm.module.css\"\nimport DataBase from \"../../../../../MockDatabase\"\n\nconst NameForm = ({nameForm, setNameForm}) => {\n    const [showModal, setShowModal] = useState(false)\n    const [searchResult, setSearchResult] = useState([])\n    const [fname, setFname] = useState(\"\")\n    const [lname, setLname] = useState(\"\")\n    const [date, setDate] = useState(\"\")\n    \n    const onFormChange = (event, prop) => {\n        console.log(event.target.value)\n        setNameForm({...nameForm, [prop]:{value:event.target.value, editable:true}})\n    }\n\n    const clearForm = () => {\n       const clearName = {\n           fname: {value:\"\", editable:true},\n           lname: {value:\"\", editable:true},\n           address: {value:\"\", editable:true},\n           date: {value:\"\" , editable:true}\n       }\n        setNameForm(clearName)\n    }\n\n    const onSelectName = (item) => {\n       const selectedName = {\n           fname: {value:item.fname, editable:false},\n           lname: {value:item.lname, editable:false},\n           address: {value:item.address, editable:false},\n           date: {value:nameForm.date.value, editable:true}\n       }\n        setNameForm(selectedName)\n        setShowModal(false)\n    }\n\n    const fetchName = () => {\n        let temp = []\n        const customerData = DataBase.getCustomer()\n        customerData.map((item) => {\n            if(fname !== \"\"){\n                if(lname !== \"\"){\n                    if(item.fname.toLowerCase() === fname.toLowerCase() && item.lname.toLowerCase() === lname.toLowerCase()){\n                        temp = [...temp, item] \n                    }\n                }\n            }\n        })\n        setSearchResult(temp)\n    }\n\n    const modalContent = (\n        <div style={{padding:\"30px\"}}>\n            <table>\n                <tbody>\n                    <tr>\n                        <td><label>นามลูกค้า</label></td>\n                        <td>\n                            <input type=\"text\" value={fname} onChange={(event) => setFname(event.target.value)}/>\n                        </td>\n                        <td><label>สกุล</label></td>\n                        <td>\n                            <input type=\"text\" value={lname} onChange={(event) => setLname(event.target.value)}/>\n                        </td>\n                        <button type=\"button\" onClick={fetchName}>🔍</button>\n                    </tr>\n                </tbody>\n            </table>\n            <div style={{height: \"300px\", overflowY:\"scroll\"}}>\n                <table className={styles[\"modal-content\"]} style={{width:\"100%\"}}>\n                    <tbody>\n                        {\n                            searchResult.map((item, index) => {\n                                return (\n                                    <>\n                                    <tr>\n                                        <td>\n                                            <span>{item.fname}</span>\n                                        </td>\n                                        <td>\n                                            <span>{item.lname}</span>\n                                        </td>\n                                        <td>\n                                            <span style={{border: \"2px solid #e8e8e8\"}}>{item.address}</span>\n                                        </td>\n                                        <td>\n                                            <button type=\"button\" onClick={()=>onSelectName(item)}>Select</button>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"11\"><hr/></td>\n                                    </tr>\n                                    </>\n                                )\n                            }\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n            <div style={{textAlign:\"right\", marginRight:\"30px\", marginTop:\"30px\"}}>\n                <button type=\"button\" onClick={() => setShowModal(false)}>close</button>\n            </div>\n        </div>\n    )\n\n    return (\n        <div className={styles[\"paper-bag-order-form\"]}>\n            <table>\n                <tbody>\n                    <tr>\n                        <td>\n                            <button type=\"button\" onClick={() => setShowModal(true)}>Old Customer?</button>\n                        </td>\n                        <td style={{textAlign: \"right\"}}>\n                            <label>นามลูกค้า:</label> \n                        </td>\n                        <td>\n                            <input type=\"text\" id=\"fname\" name=\"fname\" value={nameForm.fname.value} disabled={!nameForm.fname.editable} onChange={(event) => onFormChange(event, \"fname\")} style={{minWidth: \"300px\"}}/>\n                        </td>\n                        <td>\n                            <label>สกุล:</label>\n                        </td>\n                        <td>\n                             <input type=\"text\" id=\"lname\" name=\"lname\" value={nameForm.lname.value} disabled={!nameForm.lname.editable} onChange={(event) => onFormChange(event, \"lname\")} style={{minWidth: \"300px\"}}/>\n                        </td>\n                        <td>\n                            <label>วันที่:</label> \n                        </td>\n                        <td>\n                            <input type=\"date\" id=\"date\" name=\"date\" value={nameForm.date.value} disabled={!nameForm.date.editable} onChange={(event) => onFormChange(event, \"date\")}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label></label>\n                        </td>\n                        <td style={{textAlign:\"right\", verticalAlign: \"top\"}}>\n                            <label>ที่อยู่:</label> \n                        </td>\n                        <td style={{textAlign:\"left\"}} colSpan=\"3\">\n                            <textarea style={{width:\"95%\", height:\"100px\"}}type=\"text\" id=\"address\" name=\"address\" value={nameForm.address.value} disabled={!nameForm.address.editable} onChange={(event) => onFormChange(event, \"address\")}/>\n                        </td>\n                        <td>\n                            <label></label>\n                        </td>\n                        <td>\n                            <button className={styles[\"paper-bag-order-form-clear-button\"]} type=\"button\" onClick={clearForm}>\n                                Clear form\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <Modal content={modalContent} showModal={showModal} setShowModal={setShowModal}/>\n        </div>\n    )\n}\n\nexport default NameForm;\n","import {useState } from \"react\"\nimport PaperBagOrder from \"./PaperBagOrderForm\"\nimport NameForm from \"./NameForm\"\nimport Modal from \"../../../../ui/modal/Modal\"\nimport styles from \"./OpenPaperBagOrderForm.module.css\"\nimport \"./container.css\"\nimport DataBase from \"../../../../../MockDatabase\"\n\nconst OpenPaperBagOrderForm = () => {\n    const [showModal, setShowModal] = useState(false)\n    const [orderDetails, setOrderDetails] = useState([])\n    const [nameForm, setNameForm] = useState({\n        fname:{value:\"\", editable:true},\n        lname:{value:\"\", editable:true},\n        date:{value:\"\", editable:true},\n        address:{value:\"\", editable:true}\n                                            })\n\n    const getBagSize = () => {\n        let bagSize = []\n\n        for(let i = 0; i < 24; i++){\n            bagSize = [...bagSize, \"ตัด\"+ (i+1)]\n        }\n\n        return bagSize\n    }\n\n    const getBaseColor = () => {\n        //get from database\n        return DataBase.getBaseColor()\n    }\n\n    const menuValue = {\n        paperType:[\"KW\", \"KI\", \"กระดาษขาว\", \"KA\", \"ART\"],\n        paperThickness:[\"thick1\", \"thick2\"],\n        bagSize:getBagSize(),\n        shape:[\"ตั้ง\", \"ขวาง\"],\n        bagEars:[\"หูเจาะ\", \"หูช็อปปิ้ง\", \"หูเชือก\", \"เกลียวมัด\"],\n        colorAmount:{min:0, max:4},\n        baseColorCheck:false,\n        baseColor:getBaseColor(),\n        color:\"\",\n        quantity:{min:1},\n        unit:[\"\"],\n        price:{min:0},\n        comment:\"\",\n        workType:{sell:\"sell\", print:\"print\"}\n    }\n\n    const addNewOrder = () => {\n        let newOrder = {\n            paperType: {value:menuValue.paperType[0], editable:true},\n            paperThickness: {value:menuValue.paperThickness[0], editable:true},\n            bagSize: {value:menuValue.bagSize[0], editable:true},\n            shape: {value:menuValue.shape[0], editable:true},\n            bagEars: {value:menuValue.bagEars[0], editable:true},\n            colorAmount: {value:menuValue.colorAmount.min, editable:true},\n            baseColorCheck: {value:menuValue.baseColorCheck, editable:true},\n            baseColor: {value:menuValue.baseColor[0], editable:false},\n            color: {value:menuValue.color, editable:true},\n            quantity: {value:menuValue.quantity.min, editable:true},\n            price: {value:menuValue.price.min, editable:true},\n            workType: {value:menuValue.workType.sell, editable:true},\n            comment: {value:menuValue.comment, editable:true},\n        }\n\n        setOrderDetails([...orderDetails, newOrder])\n    }\n\n    const clearItem = () => {\n        setOrderDetails([])\n    }\n\n    return (\n        <div style={{marginBottom:\"100px\"}}>\n            {/*}\n            <input type=\"radio\" id=\"newCustomer\" name=\"customerType\" value=\"newCustomer\" defaultChecked onChange={(event)=>setCustomerType(event.target.value)}/>\n            <label htmlFor=\"newCustomer\">ลูกค้าใหม่</label>\n            <input type=\"radio\" id=\"oldCustomer\" name=\"customerType\" value=\"oldCustomer\" onChange={(event)=>setCustomerType(event.target.value)}/>\n            <label htmlFor=\"oldCustomer\">ลูกค้าเก่า</label><br/>\n\n            {customerType === \"oldCustomer\" ? NameSearch():<></>}\n            {*/}\n            <div className={styles[\"paper-bag-order-form\"]}>\n                <center><h1>ใบสั่งพิมพ์ ORDER กระดาษ</h1></center>\n                <div className=\"container\">\n                    <NameForm nameForm={nameForm} setNameForm={setNameForm}/>\n                    <PaperBagOrder orderDetails={orderDetails} setOrderDetails={setOrderDetails} menuValue={menuValue}/>\n\n                    <button type=\"button\" onClick={addNewOrder}>+Add Order</button>\n                    <button type=\"button\" onClick={() => setShowModal(true)}>Order history</button>\n                    <button className={styles[\"paper-bag-order-form-clear-button\"]} type=\"button\" onClick={clearItem}>Clear All Order</button>\n                    <button type=\"button\" onClick={() => {alert(\"confirm\")}}>Confirm</button>\n                </div>\n                <Modal showModal={showModal} setShowModal={setShowModal}/>\n            </div>\n        </div>\n    )\n}\n\nexport default OpenPaperBagOrderForm;\n","import { useParams } from \"react-router\";\nimport Banner from \"../../ui/banner/Banner\";\nimport Navbar from \"../../ui/navbar/Navbar\";\nimport OpenPaperBagOrderForm from \"./content/openPaperBagOrderForm/OpenPaperBagOrderForm\";\n\nconst Sales = () => {\n    const {type} = useParams()\n    console.log(type)\n\n    const Content = () => {\n        switch(type){\n            case \"paper\":\n                return (\n                    <OpenPaperBagOrderForm/>\n                )\n            default:\n                return (\n                    <></> \n                )\n        }\n    }\n\n    return (\n        <>\n            <Banner role=\"Sales\"/>\n            <Navbar\n                menu={[\n                    {\n                        path:\"/sales\",\n                        text:\"Open plastic bag order\"\n                    },\n                    {\n                        path:\"/sales/paper\",\n                        text:\"Open paper bag order\"\n                    },\n                    {\n                        path:\"/sales\",\n                        text:\"Reject order\"\n                    },\n                    {\n                        path:\"/sales\",\n                        text:\"Open paper bag order\"\n                    },\n                    {\n                        path:\"/sales\",\n                        text:\"Open paper bag order\"\n                    },\n                ]}\n            />\n            <Content/>\n        </>\n    )\n}\n\nexport default Sales;\n","import {Routes, Route, Navigate} from \"react-router-dom\"\nimport Login from \"./components/pages/login/Login\"\nimport Sales from \"./components/pages/sales/Sales\"\n\nconst RoutePath = () => {\n    return (\n        <Routes>\n            <Route path=\"/login\" element={<Login/>}/>\n            <Route path=\"/sales/:type\" element={<Sales/>}/>\n            <Route path=\"/sales\" element={<Sales/>}/>\n            <Route path=\"/\" element={<Navigate to=\"login\"/>}/>\n        </Routes>\n    )\n}\n\nexport {RoutePath, Navigate};\n","import {RoutePath} from \"./RoutePath\";\nimport { HashRouter as Router} from \"react-router-dom\";\n\nconst App = () => {\n    return (\n        <>\n            <Router>\n                <RoutePath/>\n            </Router>\n        </>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n          <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}