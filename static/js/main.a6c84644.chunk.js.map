{"version":3,"sources":["components/pages/sales/content/openPaperBagOrderForm/PaperBagOrderForm.module.css","components/pages/sales/content/openPaperBagOrderForm/NameForm.module.css","components/ui/modal/Modal.module.css","components/pages/sales/content/openPaperBagOrderForm/OpenPaperBagOrderForm.module.css","components/pages/login/Login.js","components/ui/banner/Banner.js","components/ui/navbar/Navbar.js","components/ui/modal/Modal.js","BackEndInterface.js","components/pages/sales/content/openPaperBagOrderForm/PaperBagOrderForm.js","components/pages/sales/content/openPaperBagOrderForm/NameForm.js","components/pages/sales/content/openPaperBagOrderForm/OpenPaperBagOrderForm.js","components/pages/sales/Sales.js","RoutePath.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Login","useState","id","setID","password","setPassword","loginResult","setLoginResult","mockUserData","role","className","type","placeholder","value","onChange","e","target","onClick","trim","status","filter","item","console","log","length","to","Banner","Navbar","menu","map","index","path","text","Modal","content","showModal","style","styles","dataBase","baseColor","customer","name","address","order","date","deadline","workName","paperType","paperThickness","bagSize","bagShape","bagEars","colorAmount","color","baseColorCheck","quantity","unit","price","workType","pattern","comment","design_id","filteredOrder","newOrder","getOrderHistory","BackEndInterface","PaperBagOrder","orderDetails","setOrderDetails","menuValue","customerName","setShowModal","onDetailChange","prop","state","subItem","subIndex","editable","modalContent","padding","paddingLeft","paddingRight","width","textAlign","colSpan","fontSize","display","document","getElementById","click","border","addOrder","marginLeft","verticalAlign","marginRight","marginTop","disabled","event","menuItem","min","max","list","checked","tempOrderDetails","index_map","removeOrder","sell","print","currentTarget","height","NameForm","nameForm","setNameForm","searchResult","setSearchResult","setName","onFormChange","addDays","days","result","Date","setDate","getDate","updateDeadlineMemo","useMemo","toISOString","split","updateDeadline","fetchName","temp","toLowerCase","search","onNameChange","overflowY","selectedName","onSelectName","minWidth","getBagSize","i","OpenPaperBagOrderForm","showCheckWorkNameModal","setShowCheckWorkNameModal","showCheckNameFormModal","setShowCheckNameFormModal","addVAT","setAddVAT","design","modalContentWorkNameCheck","modalContentNameFormCheck","marginBottom","margin","borderRadius","sum","vat","calprice","checkNameForm","checkWorkName","data","sentDataToBackEnd","alert","checkPrice","Sales","useParams","Content","RoutePath","element","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a6c84644.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper-bag-order\":\"PaperBagOrderForm_paper-bag-order__2XlDh\",\"paper-bag-order-table\":\"PaperBagOrderForm_paper-bag-order-table__3DGgk\",\"paper-bag-order-table-delete-button\":\"PaperBagOrderForm_paper-bag-order-table-delete-button__2bS1o\",\"paper-bag-order-table-work-name\":\"PaperBagOrderForm_paper-bag-order-table-work-name__1KgRy\",\"paper-bag-order-clear-button\":\"PaperBagOrderForm_paper-bag-order-clear-button__3C7KP\",\"paper-bag-order-add-button\":\"PaperBagOrderForm_paper-bag-order-add-button__1VGMd\",\"paper-bag-order-add-order-button\":\"PaperBagOrderForm_paper-bag-order-add-order-button__2788B\",\"modal-content\":\"PaperBagOrderForm_modal-content__2zpWf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper-bag-order-form\":\"NameForm_paper-bag-order-form__3Iw-T\",\"paper-bag-order-form-clear-button\":\"NameForm_paper-bag-order-form-clear-button__2iMKn\",\"modal-content\":\"NameForm_modal-content__1VBrO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__Jy8Gn\",\"modal-content\":\"Modal_modal-content__muvdq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper-bag-order-form\":\"OpenPaperBagOrderForm_paper-bag-order-form__2gxni\",\"paper-bag-order-form-clear-button\":\"OpenPaperBagOrderForm_paper-bag-order-form-clear-button__387-G\"};","import {useState} from \"react\"\nimport \"./Login.css\"\nimport {RoutePath, Navigate} from \"../../../RoutePath\"\n\nconst Login = () => {\n    const [id, setID] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [loginResult, setLoginResult] = useState(()=><p>&nbsp;</p>)\n\n    const mockUserData = [\n        {\n            id:\"user\",\n            password:\"pass\",\n            role:\"sales\"\n        }\n    ]\n\n    const onLogin = () => {\n        if(!id.trim()){\n            setLoginResult(() => <p>Please Enter ID</p>)\n            return\n        }\n        if(!password.trim()){\n            setLoginResult(() => <p>Please Enter Password</p>)\n            return\n        }\n\n        // mock up\n\n        const status = mockUserData.filter((item) => {\n            return item.id === id && item.password === password;\n        })\n        console.log(status)\n        const role = status.length > 0 ? status[0].role : \"\" \n\n        // end mockup\n        \n        if(role !== \"\"){\n            setLoginResult(() => <Navigate to={\"/\" + role}/>)\n        }\n        else{\n            setLoginResult(() => <p>Invalid ID or Password</p>)\n        }\n    }\n\n    return (\n        <div className=\"login-form-wrapper\">\n            <div className=\"login-form\">\n                <h1>Login</h1>\n                <input type=\"text\" placeholder=\"ID\" value={id} onChange={(e) => setID(e.target.value)}/>\n                <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\n                <button onClick={onLogin}>Login</button>\n                <div className=\"login-form-result\">{loginResult}</div>  \n            </div>\n        </div>\n    )\n}\n\nexport default Login;\n\n","import \"./Banner.css\"\n\nconst Banner = ({role}) => {\n    return (\n        <div className=\"top-banner\">\n            <p className=\"top-banner-company-name\">Friendly Bags</p>\n            <p className=\"top-banner-role\">•</p>\n            <p className=\"top-banner-role\">{role}</p>\n        </div> \n    )\n}\n\nexport default Banner;\n","import {Link} from \"react-router-dom\";\nimport \"./Navbar.css\"\n\nconst Navbar = ({menu}) => {\n    return (\n        <div className=\"top-navbar\">\n            <ul>\n                {menu.map((item, index) => <li key={index}><Link to={item.path}>{item.text}</Link></li>)}\n            </ul>\n        </div>\n    )\n}\n\nexport default Navbar;\n","import styles from \"./Modal.module.css\"\n\nconst Modal = ({content, showModal, style}) => {\n\n    if(!showModal){\n        return null\n    }\n\n    return (\n        <div className={styles[\"modal\"]}>\n            <div className={styles[\"modal-content\"]} style={style}>\n                {content}\n            </div>\n        </div>\n    )\n}\n\nexport default Modal;\n","let dataBase = {\n    baseColor:[\"color1\", \"color2\"],\n    customer:[\n        {\n            name:\"customer1\",\n            address:\"11/11 road xxx city xxx country xxx\"\n        },\n        {\n            name:\"customer2\",\n            address:\"11/11 road xxx city xxx country xxx\"\n        }\n    ],\n    order:[\n        {\n            date:               \"2021-01-01\",\n            deadline:           \"2021-02-01\",\n            name:               \"customer1\",\n            workName:           \"demo\",\n            paperType:          \"KW\",\n            paperThickness:     \"thick1\",\n            bagSize:            \"ตัด1\",\n            bagShape:           \"ตั้ง\",\n            bagEars:            \"หูเจาะ\",\n            colorAmount:        1,\n            color:              \"color1\",\n            baseColorCheck:     true,\n            baseColor:          \"color2\",\n            quantity:           1,\n            unit:               \"กิโล\",\n            price:              100,\n            workType:           \"sell\",\n            pattern:            \"pattern1\",\n            comment:            \"no\",\n            design_id:          \"\",\n        }\n    ]\n}\n\nconst getOrderHistory = (name) => {\n    let filteredOrder = []\n    dataBase[\"order\"].map((order, index) => {\n        if(order.name === name)\n            filteredOrder = [...filteredOrder, order] \n    })\n    return filteredOrder\n}\n\nconst getBaseColor = () => {\n   return dataBase[\"baseColor\"] \n}\n\nconst getCustomer = () => {\n    return dataBase[\"customer\"]\n}\n\nconst sentOrder = (newOrder) => {\n    dataBase[\"order\"] = [...dataBase[\"order\"], ...newOrder]\n    console.log(dataBase[\"order\"])\n}\n\nexport default {getBaseColor, getCustomer, getOrderHistory, sentOrder}\n","import { Fragment, useState} from \"react\" \nimport styles from \"./PaperBagOrderForm.module.css\"\nimport Modal from \"../../../../ui/modal/Modal\"\nimport BackEndInterface from \"../../../../../BackEndInterface\"\n\nconst getOrderHistory = (name=\"\") => {\n    console.log(name)\n    return BackEndInterface.getOrderHistory(name)\n}\n\nconst PaperBagOrder = ({orderDetails, setOrderDetails, menuValue, customerName}) => {\n    const [showModal, setShowModal] = useState(false)\n\n    const removeOrder = (index) => {\n        let tempOrderDetails = []\n\n        orderDetails.map((item, index_map) => {\n            if(index_map !== index){\n                console.log(\"before\", item)\n                return tempOrderDetails = [...tempOrderDetails, item]\n            }\n        })\n        console.log(\"after\", tempOrderDetails)\n        setOrderDetails(tempOrderDetails)\n    }\n\n    const onDetailChange = (value, index, prop, state=true) => {\n        console.log(value)\n        setOrderDetails(orderDetails.map(\n                (subItem, subIndex) => {\n                    if(index !== subIndex) return {...subItem}\n                    return {...subItem, [prop]: {value:value, editable:state}}\n                }\n            )\n        )\n    }\n\n    const addNewOrder = () => {\n        let newOrder = {\n            workName: {value:menuValue.workName, editable:true},\n            paperType: {value:menuValue.paperType[0], editable:true},\n            paperThickness: {value:menuValue.paperThickness[0], editable:true},\n            bagSize: {value:menuValue.bagSize[0], editable:true},\n            bagShape: {value:menuValue.bagShape[0], editable:true},\n            bagEars: {value:menuValue.bagEars[0], editable:true},\n            colorAmount: {value:menuValue.colorAmount.min, editable:true},\n            color: {value:menuValue.color[0], editable:false},\n            baseColorCheck: {value:menuValue.baseColorCheck, editable:true},\n            baseColor: {value:menuValue.baseColor[0], editable:false},\n            quantity: {value:menuValue.quantity.min, editable:true},\n            unit: {value:menuValue.unit[0], editable:true},\n            price: {value:menuValue.price.min, editable:true},\n            workType: {value:menuValue.workType.sell, editable:true},\n            pattern: {value:menuValue.pattern[0], editable:true},\n            comment: {value:menuValue.comment, editable:true},\n        }\n\n        setOrderDetails([...orderDetails, newOrder])\n    }\n\n    const addOrder = (order) => {\n        let newOrder = {\n            workName: {value:order.workName, editable:true},\n            paperType: {value:order.paperType, editable:true},\n            paperThickness: {value:order.paperThickness, editable:true},\n            bagSize: {value:order.bagSize, editable:true},\n            bagShape: {value:order.bagShape, editable:true},\n            bagEars: {value:order.bagEars, editable:true},\n            colorAmount: {value:order.colorAmount, editable:true},\n            color: {value:order.color, editable:false},\n            baseColorCheck: {value:order.baseColorCheck, editable:true},\n            baseColor: {value:order.baseColor, editable:false},\n            quantity: {value:order.quantity, editable:true},\n            unit: {value:order.unit, editable:true},\n            price: {value:order.price, editable:true},\n            workType: {value:order.workType, editable:true},\n            pattern: {value:order.pattern, editable:true},\n            comment: {value:order.comment, editable:true},\n        }\n\n        setOrderDetails([...orderDetails, newOrder])\n    }\n\n    const clearItem = () => {\n        setOrderDetails([])\n    }\n\n    const modalContent = (\n        <div style={{padding: \"30px\"}}>\n        <div className={styles[\"paper-bag-order-table\"]}>\n            <table>\n                <thead>\n                    <tr>\n                        <th><label style={{paddingLeft:\"10px\", paddingRight:\"10px\"}}>ลำดับที่</label></th>\n                        <th><label>ชนิดกระดาษ</label></th>\n                        <th><label>ความหนากระดาษ</label></th>\n                        <th><label>ขนาดถุง</label></th>\n                        <th><label>ทรง</label></th>\n                        <th><label>หูถุง</label></th>\n                        <th><label>จำนวนสีพิมพ์</label></th>\n                        <th><label>สี</label></th>\n                        <th><label>ย้อมพื้น</label></th>\n                        <th><label>สีย้อม</label></th>\n                        <th style={{width:\"200px\"}}><label>จำนวน</label></th>\n                        <th><label>ราคา</label></th>\n                        <th><label>แบบ</label></th>\n                        <th><label></label></th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    <tr><td><label>&nbsp;</label></td></tr>\n                {getOrderHistory(customerName).map((item, index) => {\n                    console.log(\"map\", item)\n                    return (\n                        <Fragment key={index}>\n                        <tr>\n                            <td></td>\n                            <td className={styles[\"paper-bag-order-table-work-name\"]} style={{textAlign:\"left\"}} colSpan={5}>\n                                <labal style={{width:\"60%\", textAlign:\"left\", fontSize:\"25px\"}}>ชื่องาน: {item.workName}</labal>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label style={{paddingLeft:\"10px\", paddingRight:\"10px\"}}>{index+1}</label>\n                            </td>\n                            <td>\n                                <labal style={{width:\"60%\", textAlign:\"left\"}}>{item.paperType}</labal>\n                            </td>\n                            <td>\n                                <labal style={{width:\"60%\", textAlign:\"left\"}}>{item.paperThickness} gram</labal>\n                            </td>\n                            <td>\n                                <labal style={{width:\"60%\", textAlign:\"left\"}}>{item.bagSize}</labal>\n                            </td>\n                            <td>\n                                <labal style={{width:\"60%\", textAlign:\"left\"}}>{item.bagShape}</labal>\n                            </td>\n                            <td>\n                                <labal style={{width:\"60%\", textAlign:\"left\"}}>{item.bagEars}</labal>\n                            </td>\n                            <td>\n                                <labal style={{width:\"60%\", textAlign:\"left\"}}>{item.colorAmount}</labal>\n                            </td>\n                            <td>\n                                <labal style={{width:\"60%\", textAlign:\"left\"}}>{item.colorAmount !== 0 ? item.color : \"-\"}</labal>\n                            </td>\n                            <td>\n                                <labal style={{width:\"60%\", textAlign:\"left\"}}>{item.baseColorCheck ? \"ย้อม\" : \"ไม่ย้อม\"}</labal>\n                            </td>\n                            <td>\n                                <labal style={{width:\"60%\", textAlign:\"left\"}}>{item.baseColorCheck ? item.baseColor : \"-\"}</labal>\n                            </td>\n                            <td>\n                                <labal style={{width:\"60%\", textAlign:\"left\"}}>{item.quantity} {item.unit}</labal>\n                            </td>\n                            <td>\n                                <labal style={{width:\"60%\", textAlign:\"left\"}}>{item.price}</labal>\n                            </td>\n                            <td>\n                                <input type=\"button\" id=\"file-upload\" style={{display:\"none\"}}/>\n                                <button type=\"button\" onClick={()=>document.getElementById(\"file-upload\").click()}>View</button>\n                            </td>\n                            <td>\n                                <button className={styles[\"paper-bag-order-add-button\"]} type=\"button\" style={{border:\"none\"}} onClick={()=>addOrder(item)}>+</button>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label></label>\n                            </td>\n                            <td style={{paddingRight:\"0\", marginLeft:\"100px\"}} colSpan={3}>\n                                <label>ประเภท: </label>\n                                <label>{item.workType === \"sell\" ? \"งานขาย\" : \"งานพิมพ์\"}</label>\n                                <label style={{paddingRight:\"30px\"}}>&nbsp;</label>\n                            {\n                                item.workType === \"sell\" && <label>ลาย: {item.pattern}</label>\n                            }\n                            </td>\n                            <td style={{}}>\n                                <label>Comment:</label>\n                            </td>\n                            <td style={{textAlign:\"left\", verticalAlign: \"top\"}} colSpan=\"4\">\n                                <label>{item.comment}</label>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label></label>\n                            </td>\n                            <td colSpan=\"12\"><hr/></td>\n                            <td>\n                                <label></label>\n                            </td>\n                        </tr>\n                        </Fragment>\n                    )\n                })}\n                </tbody>\n            </table>\n        </div>\n        <div style={{textAlign:\"right\", marginRight:\"30px\", marginTop:\"30px\"}}>\n            <button type=\"button\" onClick={() => setShowModal(false)}>close</button>\n        </div>\n        </div>\n    )\n\n    return (\n        <div className={styles[\"paper-bag-order\"]}>\n        <div className={styles[\"paper-bag-order-table\"]}>\n            <table>\n                <thead>\n                    <tr>\n                        <th><label style={{paddingLeft:\"10px\", paddingRight:\"10px\"}}>ลำดับที่</label></th>\n                        <th><label>ชนิดกระดาษ</label></th>\n                        <th><label>ความหนากระดาษ</label></th>\n                        <th><label>ขนาดถุง</label></th>\n                        <th><label>ทรง</label></th>\n                        <th><label>หูถุง</label></th>\n                        <th><label>จำนวนสีพิมพ์</label></th>\n                        <th><label>สี</label></th>\n                        <th><label>ย้อมพื้น</label></th>\n                        <th><label>สีย้อม</label></th>\n                        <th style={{width:\"200px\"}}><label>จำนวน</label></th>\n                        <th><label>ราคา</label></th>\n                        <th><label>แนบแบบ</label></th>\n                        <th><label></label></th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    <tr><td><label>&nbsp;</label></td></tr>\n                {orderDetails.map((item, index) => {\n                    console.log(\"map\", item)\n                    return (\n                        <Fragment key={index}>\n                        <tr>\n                            <td></td>\n                            <td className={styles[\"paper-bag-order-table-work-name\"]} style={{textAlign:\"left\"}} colSpan={5}>\n                                <input style={{width:\"60%\", textAlign:\"left\"}} type=\"text\" name=\"workName\" id=\"workName\" value={item.workName.value} disabled={!item.workName.editable} placeholder=\"ระบุชื่องาน\" onChange={(event) => onDetailChange(event.target.value, index, \"workName\")}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label style={{paddingLeft:\"10px\", paddingRight:\"10px\"}}>{index+1}</label>\n                            </td>\n                            <td>\n                                <select name=\"paperType\" id=\"paperType\" value={item.paperType.value} disabled={!item.paperType.editable} onChange={(event) => onDetailChange(event.target.value, index, \"paperType\")}>\n                                    {\n                                        menuValue.paperType.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}>{menuItem}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </td>\n                            <td>\n                                <select style={{width:\"50%\"}}name=\"paperThickness\" id=\"paperThickness\" value={item.paperThickness.value} disabled={!item.paperThickness.editable} onChange={(event) => onDetailChange(event.target.value, index, \"paperThickness\")}>\n                                    {\n                                        menuValue.paperThickness.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}>{menuItem}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                                <lable>gram</lable>\n                            </td>\n                            <td>\n                                <select name=\"bagSize\" id=\"bagSize\" value={item.bagSize.value} disabled={!item.bagSize.editable} onChange={(event) => onDetailChange(event.target.value, index, \"bagSize\")}>\n                                    {\n                                        menuValue.bagSize.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}>{menuItem}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </td>\n                            <td>\n                                <select name=\"bagShape\" id=\"bagShape\" value={item.bagShape.value} disabled={!item.bagShape.editable} onChange={(event) => onDetailChange(event.target.value, index, \"bagShape\")}>\n                                    {\n                                        menuValue.bagShape.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}>{menuItem}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </td>\n                            <td>\n                                <select name=\"bagEars\" id=\"bagEars\" value={item.bagEars.value} disabled={!item.bagEars.editable} onChange={(event) => onDetailChange(event.target.value, index, \"bagEars\")}>\n                                    {\n                                        menuValue.bagEars.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}>{menuItem}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </td>\n                            <td>\n                                <input type=\"number\" min={menuValue.colorAmount.min} max={menuValue.colorAmount.max} name=\"colorAmount\" id=\"colorAmount\" value={item.colorAmount.value} disabled={!item.colorAmount.editable} onChange={(event) => onDetailChange(event.target.value, index, \"colorAmount\")}/>\n                            </td>\n                            {\n                                item.color.editable = item.colorAmount.value == 0? false:true\n                            }\n                            <td>\n                                <input list=\"color\" name=\"color\" value={item.colorAmount.value == 0 ? \"\" : item.color.value} disabled={!item.color.editable} placeholder=\"ระบุสี\" onChange={(event) => onDetailChange(event.target.value, index, \"color\")}/>\n                                <datalist id=\"color\">\n                                {\n                                    menuValue.color.map((menuItem, subIndex) => {\n                                        return (\n                                            <option key={subIndex} value={menuItem}/>\n                                        )\n                                    })\n                                }\n                                </datalist>\n                            </td>\n                            <td>\n                                <input type=\"checkbox\" name=\"baseColorCheck\" id=\"baseColorCheck\" checked={item.baseColorCheck.value} disabled={!item.baseColorCheck.editable} onChange={(event) => {\n                                onDetailChange(event.target.checked, index, \"baseColorCheck\")\n                                }\n                            }\n                            />\n                            </td>\n                            {\n                                item.baseColor.editable = item.baseColorCheck.value\n                            }\n                            <td>\n                                <input list=\"baseColor\" name=\"baseColor\" value={item.baseColorCheck.value ? item.baseColor.value : \"\"} disabled={!item.baseColor.editable} placeholder=\"ระบุสี\" onChange={(event) => onDetailChange(event.target.value, index, \"baseColor\")}/>\n                                    <datalist id=\"baseColor\">\n                                    {\n                                        menuValue.baseColor.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}/>\n                                            )\n                                        })\n                                    }\n                                  </datalist>\n                            </td>\n                            <td>\n                                <input style={{width: \"50px\"}}type=\"number\" min={menuValue.quantity.min} name=\"quantity\" id=\"quantity\" value={item.quantity.value} disabled={!item.quantity.editable} onChange={(event) => onDetailChange(event.target.value, index, \"quantity\")}/>\n                                <select style={{width: \"70px\"}}name=\"unit\" id=\"unit\" value={item.unit.value} disabled={!item.unit.editable} onChange={(event) => onDetailChange(event.target.value, index, \"unit\")}>\n                                    {\n                                        menuValue.unit.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}>{menuItem}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </td>\n                            <td>\n                                <input type=\"number\" min={menuValue.price.min} name=\"price\" id=\"price\" value={item.price.value} disabled={!item.price.editable} onChange={(event) => onDetailChange(event.target.value, index, \"price\")}/>\n                            </td>\n                            <td>\n                                <input type=\"file\" id=\"file-upload\" style={{display:\"none\"}}/>\n                                <button type=\"button\" onClick={()=>document.getElementById(\"file-upload\").click()}>Upload</button>\n                            </td>\n                            <td>\n                                <button className={styles[\"paper-bag-order-table-delete-button\"]} type=\"button\" style={{border:\"none\"}} onClick={()=>removeOrder(index)}>X</button>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label></label>\n                            </td>\n                            <td style={{textAlign:\"right\", paddingRight:\"0\"}}>\n                                <label>งานขาย</label>\n                                <br/>\n                                <label>งานพิมพ์</label>\n                            </td>\n                            <td style={{textAlign:\"left\", paddingLeft:\"0\"}}>\n                                <input type=\"radio\" name={\"workType\"+index} id=\"workType\" checked={item.workType.value === menuValue.workType.sell?\"checked\":\"\"} value={menuValue.workType.sell} disabled={!item.workType.editable} onChange={(event) => onDetailChange(event.target.value, index, \"workType\")}/>\n                                <br/>\n                                <input type=\"radio\" name={\"workType\"+index} id=\"workType\" checked={item.workType.value === menuValue.workType.print?\"checked\":\"\"} value={menuValue.workType.print} disabled={!item.workType.editable} onChange={(event) => onDetailChange(event.currentTarget.value, index, \"workType\")}/>\n                            </td>\n                            {\n                                item.pattern.editable = item.workType.value === \"print\"? false:true\n                            }\n                            <td>\n                                <select style={{width: \"70px\"}} name=\"pattern\" id=\"pattern\" value={item.pattern.value} disabled={!item.pattern.editable} onChange={(event) => onDetailChange(event.target.value, index, \"pattern\")}>\n                                    {\n                                        menuValue.pattern.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}>{menuItem}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </td>\n                            <td style={{}}>\n                                <label>Comment:</label>\n                            </td>\n                            <td style={{textAlign:\"left\", verticalAlign: \"top\"}} colSpan=\"4\">\n                                <textarea style={{width:\"100%\", height:\"70px\"}} value={item.comment.value} disabled={!item.comment.editable} onChange={(event) => onDetailChange(event.target.value, index, \"comment\")}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label></label>\n                            </td>\n                            <td colSpan=\"12\"><hr/></td>\n                            <td>\n                                <label></label>\n                            </td>\n                        </tr>\n                        </Fragment>\n                    )\n                })}\n                </tbody>\n\n            </table>\n        </div>\n        <button className={styles[\"paper-bag-order-add-order-button\"]} type=\"button\" onClick={addNewOrder}>+Add Order</button>\n        <button type=\"button\" onClick={() => setShowModal(true)}>Order history</button>\n        <button className={styles[\"paper-bag-order-clear-button\"]} type=\"button\" onClick={clearItem}>Clear All Order</button>\n        <Modal style={{width:\"1700px\"}}content={modalContent} showModal={showModal} setShowModal={setShowModal}/>\n        </div>\n    )\n}\nexport default PaperBagOrder;\n","import { useMemo, useState } from \"react\"\nimport Modal from \"../../../../ui/modal/Modal\"\nimport styles from \"./NameForm.module.css\"\nimport BackEndInterface from \"../../../../../BackEndInterface\"\n\nconst getCustomerData = () => {\n    return BackEndInterface.getCustomer()\n}\n\nconst NameForm = ({nameForm, setNameForm}) => {\n    const [showModal, setShowModal] = useState(false)\n    const [searchResult, setSearchResult] = useState([])\n    const [name, setName] = useState(\"\")\n    const [date, setDate] = useState(\"\")\n    \n    const onFormChange = (event, prop) => {\n        console.log(event.target.value)\n        setNameForm({...nameForm, [prop]:{value:event.target.value, editable:true}})\n    }\n\n    const clearForm = () => {\n       const clearName = {\n           name: {value:\"\", editable:true},\n           address: {value:\"\", editable:true},\n           date: {value:\"\" , editable:true},\n           deadline: {value:\"\", editable:true}\n       }\n        setNameForm(clearName)\n    }\n\n    const onSelectName = (item) => {\n       const selectedName = {\n           name: {value:item.name, editable:false},\n           address: {value:item.address, editable:false},\n           date: {value:nameForm.date.value, editable:true},\n           deadline: {value:nameForm.deadline.value, editable:true}\n       }\n        setNameForm(selectedName)\n        setShowModal(false)\n    }\n    const addDays = (date, days) => {\n        var result = new Date(date);\n        result.setDate(result.getDate() + days);\n        return result;\n    }\n\n    const updateDeadline = (date, days) => {\n        if(nameForm.deadline.value === \"\" && nameForm.date.value !== \"\")\n            setNameForm({...nameForm, [\"deadline\"]:{value:addDays(date, days).toISOString().split(\"T\")[0], editable:true}}) \n    }\n\n    const updateDeadlineMemo = useMemo(() => {\n        updateDeadline(nameForm.date.value, 30)\n    }, [nameForm.date.value]) \n\n    const fetchName = () => {\n        let temp = []\n        const customerData = getCustomerData() \n        customerData.map((item) => {\n            if(name !== \"\"){\n                if(item.name.toLowerCase().search(name.toLowerCase()) >= 0){\n                    temp = [...temp, item] \n                }\n            }\n        })\n        setSearchResult(temp)\n    }\n\n    const onNameChange = useMemo(fetchName, [name])\n\n    const modalContent = (\n        <div style={{padding:\"30px\"}}>\n            <table>\n                <tbody>\n                    <tr>\n                        <td><label>นามลูกค้า</label></td>\n                        <td>\n                            <input type=\"text\" value={name} onChange={(event) => {setName(event.target.value);}}/>\n                            {onNameChange}\n                        </td>\n                        <button type=\"button\" onClick={fetchName}>🔍</button>\n                    </tr>\n                </tbody>\n            </table>\n            <div style={{height: \"300px\", overflowY:\"scroll\"}}>\n                <table className={styles[\"modal-content\"]} style={{width:\"100%\"}}>\n                    <tbody>\n                        {\n                            searchResult.map((item, index) => {\n                                return (\n                                    <>\n                                    <tr>\n                                        <td>\n                                            <span>{item.name}</span>\n                                        </td>\n                                        <td>\n                                            <span style={{border: \"2px solid #e8e8e8\"}}>{item.address}</span>\n                                        </td>\n                                        <td>\n                                            <button type=\"button\" onClick={()=>onSelectName(item)}>Select</button>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"11\"><hr/></td>\n                                    </tr>\n                                    </>\n                                )\n                            }\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n            <div style={{textAlign:\"right\", marginRight:\"30px\", marginTop:\"30px\"}}>\n                <button type=\"button\" onClick={() => setShowModal(false)}>close</button>\n            </div>\n        </div>\n    )\n\n    return (\n        <div className={styles[\"paper-bag-order-form\"]}>\n            <table>\n                <tbody>\n                    <tr>\n                        <td>\n                            <button type=\"button\" onClick={() => setShowModal(true)}>Old Customer?</button>\n                        </td>\n                        <td style={{textAlign: \"right\"}}>\n                            <label>นามลูกค้า:</label> \n                        </td>\n                        <td>\n                            <input type=\"text\" id=\"name\" name=\"name\" value={nameForm.name.value} disabled={!nameForm.name.editable} onChange={(event) => onFormChange(event, \"name\")} style={{minWidth: \"300px\"}}/>\n                        </td>\n                        <td>\n                            <label>วันที่:</label> \n                        </td>\n                        <td>\n                            <input type=\"date\" id=\"date\" name=\"date\" value={nameForm.date.value} disabled={!nameForm.date.editable} onChange={(event) => { onFormChange(event, \"date\") } } />\n                        </td>\n                        {updateDeadlineMemo}\n                        <td>\n                            <label>กำหนดส่ง:</label> \n                        </td>\n                        <td>\n                            <input type=\"date\" id=\"deadline\" name=\"deadline\" value={nameForm.deadline.value} disabled={!nameForm.deadline.editable} onChange={(event) => onFormChange(event, \"deadline\")}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label></label>\n                        </td>\n                        <td style={{textAlign:\"right\", verticalAlign: \"top\"}}>\n                            <label>ที่อยู่:</label> \n                        </td>\n                        <td style={{textAlign:\"left\"}} colSpan={3}>\n                            <textarea style={{width:\"95%\", height:\"100px\"}}type=\"text\" id=\"address\" name=\"address\" value={nameForm.address.value} disabled={!nameForm.address.editable} onChange={(event) => onFormChange(event, \"address\")}/>\n                        </td>\n                        <td>\n                            <label></label>\n                        </td>\n                        <td>\n                            <button className={styles[\"paper-bag-order-form-clear-button\"]} type=\"button\" onClick={clearForm}>\n                                Clear form\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <Modal style={{width:\"1000px\"}} content={modalContent} showModal={showModal} setShowModal={setShowModal}/>\n        </div>\n    )\n}\n\nexport default NameForm;\n","import { useState } from \"react\"\nimport PaperBagOrder from \"./PaperBagOrderForm\"\nimport NameForm from \"./NameForm\"\nimport styles from \"./OpenPaperBagOrderForm.module.css\"\nimport \"./container.css\"\nimport BackEndInterface from \"../../../../../BackEndInterface\"\nimport Modal from \"../../../../ui/modal/Modal\"\n\nconst getPaperType = () => {\n    return [\"KW\", \"KI\", \"กระดาษขาว\", \"KA\", \"ART\"]\n}\n\nconst getPaperThickness = () => {\n    return [\"thick1\", \"thick2\"]\n}\n\nconst getShape = () => {\n    return [\"ตั้ง\", \"ขวาง\"]\n}\n\nconst getBagEar = () => {\n    return [\"หูเจาะ\", \"หูช็อปปิ้ง\", \"หูเชือก\", \"เกลียวมัด\"]\n}\n\nconst getColorAmount = () => {\n    return {min:0, max:4}\n}\n\nconst getQuantity = () => {\n    return {min:1}\n}\n\nconst getUnit = () => {\n    return [\"ใบ\",\"กิโล\",\"ลูก\"]\n}\n\nconst getPrice = () => {\n    return {min:0}\n}\n\nconst getWorkType = () => {\n    return {sell:\"sell\", print:\"print\"}\n}\n\nconst getPattern = () => {\n    return [\"pattern1\", \"pattern2\"] \n}\n\nconst getBagSize = () => {\n    let bagSize = []\n\n    for(let i = 0; i < 24; i++){\n        bagSize = [...bagSize, \"ตัด\"+ (i+1)]\n    }\n\n    return bagSize\n}\n\nconst getDesign = () => {\n    return \"\"\n}\n\nconst getColor = () => {\n    //get from database\n    return BackEndInterface.getBaseColor()\n}\n\nconst getBaseColor = () => {\n    //get from database\n    return BackEndInterface.getBaseColor()\n}\n\nconst sentDataToBackEnd = (order) => {\n    BackEndInterface.sentOrder(order)\n}\n\nconst OpenPaperBagOrderForm = () => {\n    const [showCheckWorkNameModal, setShowCheckWorkNameModal] = useState(false)\n    const [showCheckNameFormModal, setShowCheckNameFormModal] = useState(false)\n    const [orderDetails, setOrderDetails] = useState([])\n    const [addVAT, setAddVAT] = useState(false)\n    const [nameForm, setNameForm] = useState({\n        name:{value:\"\", editable:true},\n        date:{value:\"\", editable:true},\n        deadline:{value:\"\", editable:true},\n        address:{value:\"\", editable:true}\n    })\n\n    const resetPageValue = () => {\n\n    }\n\n    const menuValue = {\n        workName:\"\",\n        paperType: getPaperType(),\n        paperThickness: getPaperThickness(),\n        bagSize: getBagSize(),\n        bagShape: getShape(),\n        bagEars: getBagEar(),\n        colorAmount: getColorAmount(),\n        color: getColor(),\n        baseColorCheck:false,\n        baseColor:getBaseColor(),\n        quantity: getQuantity(),\n        unit: getUnit(),\n        price: getPrice(),\n        comment:\"\",\n        workType: getWorkType(),\n        pattern: getPattern(),\n        design: getDesign()\n    }\n\n    const checkPrice = () => {\n        let status = false\n        orderDetails.map((item, index) => {\n            if(item.price.value == 0){\n                status = true\n            }\n        }) \n        \n        return status\n    }\n\n    const checkWorkName = () => {\n        let status = false\n        orderDetails.map((item, index) => {\n            if(item.workName.value == 0){\n                status = true\n            }\n        }) \n        \n        return status\n    }\n\n    const checkNameForm = () => {\n        let status = false\n\n        console.log(\"form\", nameForm)\n        if(nameForm.name.value === \"\" || nameForm.address.value === \"\" || nameForm.date.value === \"\" || nameForm.deadline.value === \"\"){\n            status = true\n        }\n\n        return status\n    }\n\n    const packDataAndSent = () => {\n        let order = []  \n\n        if(checkNameForm()){\n            setShowCheckNameFormModal(true)\n            return\n        }\n\n        if(checkWorkName()){\n            setShowCheckWorkNameModal(true)\n            return\n        }\n        orderDetails.map((item) => {\n            const data = {\n                date:               nameForm.date.value,\n                deadline:           nameForm.deadline.value,\n                name:               nameForm.name.value,\n                workName:           item.workName.value,\n                paperType:          item.paperType.value,\n                paperThickness:     item.paperThickness.value,\n                bagSize:            item.bagSize.value,\n                bagShape:           item.bagShape.value,\n                bagEars:            item.bagEars.value,\n                colorAmount:        item.colorAmount.value,\n                color:              item.color.value,\n                baseColorCheck:     item.baseColorCheck.value,\n                baseColor:          item.baseColor.value,\n                quantity:           item.quantity.value,\n                unit:               item.unit.value,\n                price:              item.price.value,\n                workType:           item.workType.value,\n                pattern:            item.pattern.value,\n                comment:            item.comment.value,\n            }\n            order = [...order, data]\n        })\n        sentDataToBackEnd(order)\n        alert(\"Success!\")\n    }\n\n    const calprice = () => {\n        let sum = 0\n        orderDetails.map((item)=>{\n            let vat = 0\n            if(addVAT){\n                vat = item.price.value * item.quantity.value * 0.07\n            }\n            sum += item.price.value * item.quantity.value + vat\n        })\n\n        return sum\n    }\n    const modalContentWorkNameCheck = (\n        <div style={{padding:\"30px\"}}>\n            <label>โปรดระบุชื่องานให้ครบทุกลำดับ</label>\n            <div style={{textAlign:\"right\", marginRight:\"30px\", marginTop:\"30px\"}}>\n                <button type=\"button\" onClick={() => setShowCheckWorkNameModal(false)}>close</button>\n            </div>\n        </div>\n    )\n\n    const modalContentNameFormCheck = (\n        <div style={{padding:\"30px\"}}>\n            <label>โปรดระบุรายละเอียดลูกค้าให้ครบถ้วน</label>\n            <div style={{textAlign:\"right\", marginRight:\"30px\", marginTop:\"30px\"}}>\n                <button type=\"button\" onClick={() => setShowCheckNameFormModal(false)}>close</button>\n            </div>\n        </div>\n    )\n\n    return (\n        <div style={{marginBottom:\"100px\"}}>\n            <div className={styles[\"paper-bag-order-form\"]}>\n                <center><h1>ใบสั่งพิมพ์ ORDER กระดาษ</h1></center>\n                <div className=\"container\">\n                    <NameForm nameForm={nameForm} setNameForm={setNameForm}/>\n                    <PaperBagOrder orderDetails={orderDetails} setOrderDetails={setOrderDetails} menuValue={menuValue} customerName={nameForm.name.value}/>\n                    <label>VAT 7%</label>\n                    <input type=\"checkbox\" name=\"VAT\" id=\"VAT\" checked={addVAT} onChange={(event) => setAddVAT(event.target.checked)}/>\n                    <input type=\"button\" id=\"file-upload\" style={{display:\"none\"}}/>\n                    <div style={{display:\"inline-block\", margin:\"0 10px\"}}>\n                        <div style={{display:\"inline-block\", padding: \"0 5px\", width: \"50px\", textAlign: \"right\", border: \"2px solid #d7d7d7\", borderRadius:\"5px\"}}>\n                            <label>{calprice()}</label>\n                        </div>\n                        <label>Baht</label>\n                    </div>\n                    <button type=\"button\" onClick={()=>document.getElementById(\"file-upload\").click()}>OP/แบหลักฐานการสั่งซื้อ</button><br/><br/>\n                    <button type=\"button\" disabled={orderDetails.length > 0 ? false : true} onClick={packDataAndSent}>Submit</button>\n                    {checkPrice() ? <label style={{color: \"#ee0000\"}}>คำเตือน: พบรายการที่ราคาเท่ากับ 0</label> : null}\n                    <Modal style={{width:\"500px\"}} content={modalContentWorkNameCheck} showModal={showCheckWorkNameModal} setShowModal={setShowCheckWorkNameModal}/>\n                    <Modal style={{width:\"500px\"}} content={modalContentNameFormCheck} showModal={showCheckNameFormModal} setShowModal={setShowCheckNameFormModal}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default OpenPaperBagOrderForm;\n","import { useParams } from \"react-router\";\nimport Banner from \"../../ui/banner/Banner\";\nimport Navbar from \"../../ui/navbar/Navbar\";\nimport OpenPaperBagOrderForm from \"./content/openPaperBagOrderForm/OpenPaperBagOrderForm\";\n\nconst Sales = () => {\n    const {type} = useParams()\n    console.log(type)\n\n    const Content = () => {\n        switch(type){\n            case \"paper\":\n                return (\n                    <OpenPaperBagOrderForm/>\n                )\n            default:\n                return (\n                    <></> \n                )\n        }\n    }\n\n    return (\n        <>\n            <Banner role=\"Sales\"/>\n            <Navbar\n                menu={[\n                    {\n                        path:\"/sales\",\n                        text:\"Open plastic bag order\"\n                    },\n                    {\n                        path:\"/sales/paper\",\n                        text:\"Open paper bag order\"\n                    },\n                    {\n                        path:\"/sales\",\n                        text:\"Reject order\"\n                    },\n                    {\n                        path:\"/sales\",\n                        text:\"Open paper bag order\"\n                    },\n                    {\n                        path:\"/sales\",\n                        text:\"Open paper bag order\"\n                    },\n                ]}\n            />\n            <Content/>\n        </>\n    )\n}\n\nexport default Sales;\n","import {Routes, Route, Navigate} from \"react-router-dom\"\nimport Login from \"./components/pages/login/Login\"\nimport Sales from \"./components/pages/sales/Sales\"\n\nconst RoutePath = () => {\n    return (\n        <Routes>\n            <Route path=\"/login\" element={<Login/>}/>\n            <Route path=\"/sales/:type\" element={<Sales/>}/>\n            <Route path=\"/sales\" element={<Sales/>}/>\n            <Route path=\"/\" element={<Navigate to=\"login\"/>}/>\n        </Routes>\n    )\n}\n\nexport {RoutePath, Navigate};\n","import {RoutePath} from \"./RoutePath\";\nimport { BrowserRouter as Router} from \"react-router-dom\";\n\nconst App = () => {\n    return (\n        <>\n            <Router>\n                <RoutePath/>\n            </Router>\n        </>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n          <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}