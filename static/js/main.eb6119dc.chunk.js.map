{"version":3,"sources":["components/pages/sales/content/openPaperBagOrderForm/PaperBagOrderForm.module.css","components/ui/banner/Banner.module.css","components/pages/sales/content/openPaperBagOrderForm/NameForm.module.css","components/pages/sales/content/orderStatus/OrderStatus.module.css","components/ui/modal/Modal.module.css","components/pages/sales/content/openPaperBagOrderForm/OpenPaperBagOrderForm.module.css","components/pages/login/Login.js","components/ui/banner/Banner.js","components/ui/modal/Modal.js","BackEndInterface.js","components/pages/sales/content/openPaperBagOrderForm/PaperBagOrderForm.js","components/pages/sales/content/openPaperBagOrderForm/NameForm.js","components/pages/sales/content/openPaperBagOrderForm/OpenPaperBagOrderForm.js","components/pages/sales/content/orderStatus/OrderStatus.js","components/pages/sales/Sales.js","RoutePath.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Login","useState","id","setID","password","setPassword","loginResult","setLoginResult","mockUserData","role","className","type","placeholder","value","onChange","e","target","onClick","trim","status","filter","item","console","log","length","to","Banner","menu","styles","map","index","path","text","Modal","content","showModal","style","dataBase","baseColor","customer","name","address","order","date","deadline","orderID","workName","paperType","paperThickness","bagSize","bagShape","bagEars","colorAmount","color","baseColorCheck","quantity","unit","price","workType","pattern","comment","sameBlock","sameColor","vat","design_id","filteredOrder","newOrder","newcustomer","getOrderHistory","BackEndInterface","PaperBagOrder","orderDetails","setOrderDetails","menuValue","customerName","setShowModal","orderHistory","setOrderHistory","onDetailChange","prop","state","subItem","subIndex","editable","onDetailChangeV2","modalContent","padding","paddingLeft","paddingRight","width","textAlign","colSpan","fontSize","display","document","getElementById","click","border","design","addOrder","marginLeft","verticalAlign","borderRadius","position","left","event","checked","marginRight","marginTop","disabled","menuItem","min","max","list","tempOrderDetails","index_map","removeOrder","sell","print","currentTarget","top","height","NameForm","nameForm","setNameForm","searchResult","setSearchResult","setName","onFormChange","addDays","days","result","Date","setDate","getDate","updateDeadlineMemo","useMemo","toISOString","split","updateDeadline","fetchName","temp","toLowerCase","search","onNameChange","overflowY","selectedName","onSelectName","minWidth","getBagSize","i","OpenPaperBagOrderForm","showCheckWorkNameModal","setShowCheckWorkNameModal","showCheckNameFormModal","setShowCheckNameFormModal","addVAT","setAddVAT","modalContentWorkNameCheck","modalContentNameFormCheck","marginBottom","margin","sum","calprice","checkNameForm","checkWorkName","data","bagType","sentDataToBackEnd","alert","checkPrice","OrderStatus","Sales","useParams","Content","RoutePath","element","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eb6119dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper-bag-order\":\"PaperBagOrderForm_paper-bag-order__2XlDh\",\"paper-bag-order-table\":\"PaperBagOrderForm_paper-bag-order-table__3DGgk\",\"paper-bag-order-table-delete-button\":\"PaperBagOrderForm_paper-bag-order-table-delete-button__2bS1o\",\"paper-bag-order-table-work-name\":\"PaperBagOrderForm_paper-bag-order-table-work-name__1KgRy\",\"paper-bag-order-clear-button\":\"PaperBagOrderForm_paper-bag-order-clear-button__3C7KP\",\"paper-bag-order-add-button\":\"PaperBagOrderForm_paper-bag-order-add-button__1VGMd\",\"paper-bag-order-add-order-button\":\"PaperBagOrderForm_paper-bag-order-add-order-button__2788B\",\"modal-content\":\"PaperBagOrderForm_modal-content__2zpWf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"top-banner\":\"Banner_top-banner__wsS9e\",\"top-banner-company-name\":\"Banner_top-banner-company-name__3RFQy\",\"top-banner-role\":\"Banner_top-banner-role__1i0kq\",\"top-navbar\":\"Banner_top-navbar___HgPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper-bag-order-form\":\"NameForm_paper-bag-order-form__3Iw-T\",\"paper-bag-order-form-clear-button\":\"NameForm_paper-bag-order-form-clear-button__2iMKn\",\"modal-content\":\"NameForm_modal-content__1VBrO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-status\":\"OrderStatus_order-status__6qHnM\",\"order-status-table\":\"OrderStatus_order-status-table__1JN0R\",\"order-status-table-delete-button\":\"OrderStatus_order-status-table-delete-button__25HzM\",\"order-status-table-work-name\":\"OrderStatus_order-status-table-work-name___GImb\",\"order-status-clear-button\":\"OrderStatus_order-status-clear-button__gp-gc\",\"order-status-add-button\":\"OrderStatus_order-status-add-button__3I5v8\",\"order-status-add-order-button\":\"OrderStatus_order-status-add-order-button__1GgE0\",\"modal-content\":\"OrderStatus_modal-content__24DvT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__Jy8Gn\",\"modal-content\":\"Modal_modal-content__muvdq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper-bag-order-form\":\"OpenPaperBagOrderForm_paper-bag-order-form__2gxni\",\"paper-bag-order-form-clear-button\":\"OpenPaperBagOrderForm_paper-bag-order-form-clear-button__387-G\"};","import {useState} from \"react\"\nimport \"./Login.css\"\nimport {RoutePath, Navigate} from \"../../../RoutePath\"\n\nconst Login = () => {\n    const [id, setID] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [loginResult, setLoginResult] = useState(()=><p>&nbsp;</p>)\n\n    const mockUserData = [\n        {\n            id:\"user\",\n            password:\"pass\",\n            role:\"sales\"\n        }\n    ]\n\n    const onLogin = () => {\n        if(!id.trim()){\n            setLoginResult(() => <p>Please Enter ID</p>)\n            return\n        }\n        if(!password.trim()){\n            setLoginResult(() => <p>Please Enter Password</p>)\n            return\n        }\n\n        // mock up\n\n        const status = mockUserData.filter((item) => {\n            return item.id === id && item.password === password;\n        })\n        console.log(status)\n        const role = status.length > 0 ? status[0].role : \"\" \n\n        // end mockup\n        \n        if(role !== \"\"){\n            setLoginResult(() => <Navigate to={\"/\" + role}/>)\n        }\n        else{\n            setLoginResult(() => <p>Invalid ID or Password</p>)\n        }\n    }\n\n    return (\n        <div className=\"login-form-wrapper\">\n            <div className=\"login-form\">\n                <h1>Login</h1>\n                <input type=\"text\" placeholder=\"ID\" value={id} onChange={(e) => setID(e.target.value)}/>\n                <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\n                <button onClick={onLogin}>Login</button>\n                <div className=\"login-form-result\">{loginResult}</div>  \n            </div>\n        </div>\n    )\n}\n\nexport default Login;\n\n","import styles from \"./Banner.module.css\"\nimport {Link} from \"react-router-dom\";\n\nconst Banner = ({role, menu=[]}) => {\n    return (\n        <div className={styles[\"top-banner\"]}>\n            <label className={styles[\"top-banner-company-name\"]}>Friendly Bags</label>\n            <label className={styles[\"top-banner-role\"]}>•</label>\n            <label className={styles[\"top-banner-role\"]}>{role}</label>\n            <div className={styles[\"top-navbar\"]}>\n                <ul>\n                    {menu.map((item, index) => <li key={index}><Link to={item.path}>{item.text}</Link></li>)}\n                </ul>\n            </div>\n        </div> \n    )\n}\n\nexport default Banner;\n","import {useEffect, useState} from \"react\"\nimport styles from \"./Modal.module.css\"\n\nconst Modal = ({content, showModal, style}) => {\n    const [modalContent, setModalContent] = useState(content) \n    if(!showModal){\n        return null\n    }\n\n    return (\n        <div className={styles[\"modal\"]}>\n            <div className={styles[\"modal-content\"]} style={style}>\n                {content}\n            </div>\n        </div>\n    )\n}\n\nexport default Modal;\n","let dataBase = {\n    baseColor:[\"color1\", \"color2\"],\n    customer:[\n        {\n            name:\"customer1\",\n            address:\"11/11 road xxx city xxx country xxx\"\n        },\n        {\n            name:\"customer2\",\n            address:\"11/11 road xxx city xxx country xxx\"\n        }\n    ],\n    order:[\n        {\n            date:               \"2021-01-01\",\n            deadline:           \"2021-02-01\",\n            orderID:            \"1234567890\",\n            name:               \"customer1\",\n            workName:           \"demo\",\n            paperType:          \"KW\",\n            paperThickness:     \"thick1\",\n            bagSize:            \"ตัด1\",\n            bagShape:           \"ตั้ง\",\n            bagEars:            \"หูเจาะ\",\n            colorAmount:        1,\n            color:              \"color1\",\n            baseColorCheck:     true,\n            baseColor:          \"color2\",\n            quantity:           1,\n            unit:               \"กิโล\",\n            price:              100,\n            workType:           \"sell\",\n            pattern:            \"pattern1\",\n            comment:            \"no\",\n            sameBlock:          false,\n            sameColor:          false,\n            vat:                \"7%\",\n            design_id:          \"\",\n            status:             \"ตรวจสอบออร์เดอร์\"\n        }\n    ]\n}\n\nconst getOrderHistory = (name) => {\n    let filteredOrder = []\n    if(name === \"\"){\n        return [...dataBase[\"order\"]]\n    }\n    dataBase[\"order\"].map((order, index) => {\n        if(order.name === name)\n            filteredOrder = [...filteredOrder, order] \n    })\n    return filteredOrder\n}\n\nconst getBaseColor = () => {\n   return dataBase[\"baseColor\"] \n}\n\nconst getCustomer = () => {\n    return dataBase[\"customer\"]\n}\n\nconst sentOrder = (newOrder) => {\n    dataBase[\"order\"] = [...dataBase[\"order\"], ...newOrder]\n    let newcustomer = {name: newOrder[0].name, address:newOrder[0].address}\n    dataBase[\"customer\"] = [...dataBase[\"customer\"], newcustomer]\n    console.log(dataBase[\"customer\"])\n}\n\nexport default {getBaseColor, getCustomer, getOrderHistory, sentOrder}\n","import { Fragment, useState} from \"react\" \nimport styles from \"./PaperBagOrderForm.module.css\"\nimport Modal from \"../../../../ui/modal/Modal\"\nimport BackEndInterface from \"../../../../../BackEndInterface\"\n\nconst getOrderHistory = (name=\"\") => {\n    console.log(name)\n    return BackEndInterface.getOrderHistory(name)\n}\n\nconst PaperBagOrder = ({orderDetails, setOrderDetails, menuValue, customerName}) => {\n    const [showModal, setShowModal] = useState(false)\n    const [orderHistory, setOrderHistory] = useState(getOrderHistory(customerName))\n\n    const removeOrder = (index) => {\n        let tempOrderDetails = []\n\n        orderDetails.map((item, index_map) => {\n            if(index_map !== index){\n                console.log(\"before\", item)\n                return tempOrderDetails = [...tempOrderDetails, item]\n            }\n        })\n        console.log(\"after\", tempOrderDetails)\n        setOrderDetails(tempOrderDetails)\n    }\n\n    const onDetailChange = (value, index, prop, state=true) => {\n        console.log(value)\n        setOrderDetails(orderDetails.map(\n                (subItem, subIndex) => {\n                    if(index !== subIndex) return {...subItem}\n                    return {...subItem, [prop]: {value:value, editable:state}}\n                }\n            )\n        )\n    }\n\n    const onDetailChangeV2 = (value, index, prop) => {\n        console.log(value)\n        setOrderHistory(orderHistory.map(\n                (subItem, subIndex) => {\n                    if(index !== subIndex) return {...subItem}\n                    return {...subItem, [prop]: value}\n                }\n            )\n        )\n    }\n\n    const addNewOrder = () => {\n        let newOrder = {\n            workName: {value:menuValue.workName, editable:true},\n            paperType: {value:menuValue.paperType[0], editable:true},\n            paperThickness: {value:menuValue.paperThickness[0], editable:true},\n            bagSize: {value:menuValue.bagSize[0], editable:true},\n            bagShape: {value:menuValue.bagShape[0], editable:true},\n            bagEars: {value:menuValue.bagEars[0], editable:true},\n            colorAmount: {value:menuValue.colorAmount.min, editable:true},\n            color: {value:menuValue.color[0], editable:false},\n            baseColorCheck: {value:menuValue.baseColorCheck, editable:true},\n            baseColor: {value:menuValue.baseColor[0], editable:false},\n            quantity: {value:menuValue.quantity.min, editable:true},\n            unit: {value:menuValue.unit[0], editable:true},\n            price: {value:menuValue.price.min, editable:true},\n            design: {value:menuValue.design, editable:true},\n            workType: {value:menuValue.workType.sell, editable:true},\n            pattern: {value:menuValue.pattern[0], editable:true},\n            comment: {value:menuValue.comment, editable:true},\n            sameBlock: {value:menuValue.sameBlock, editable:true},\n            sameColor: {value:menuValue.sameColor, editable:true},\n        }\n\n        setOrderDetails([...orderDetails, newOrder])\n    }\n\n    const addOrder = (order) => {\n        let newOrder = {\n            workName: {value:order.workName, editable:true},\n            paperType: {value:order.paperType, editable:true},\n            paperThickness: {value:order.paperThickness, editable:true},\n            bagSize: {value:order.bagSize, editable:true},\n            bagShape: {value:order.bagShape, editable:true},\n            bagEars: {value:order.bagEars, editable:true},\n            colorAmount: {value:order.colorAmount, editable:true},\n            color: {value:order.color, editable:false},\n            baseColorCheck: {value:order.baseColorCheck, editable:true},\n            baseColor: {value:order.baseColor, editable:false},\n            quantity: {value:order.quantity, editable:true},\n            unit: {value:order.unit, editable:true},\n            price: {value:order.price, editable:true},\n            design: {value:menuValue.design, editable:true},\n            workType: {value:order.workType, editable:true},\n            pattern: {value:order.pattern, editable:true},\n            comment: {value:order.comment, editable:true},\n            sameBlock: {value:order.sameBlock, editable:true},\n            sameColor: {value:order.sameColor, editable:true}\n        }\n\n        setOrderDetails([...orderDetails, newOrder])\n    }\n\n    const clearItem = () => {\n        setOrderDetails([])\n    }\n\n    const modalContent = (\n        <div style={{padding: \"30px\"}}>\n        <div className={styles[\"paper-bag-order-table\"]}>\n            <table>\n                <thead>\n                    <tr>\n                        <th><label style={{paddingLeft:\"10px\", paddingRight:\"10px\"}}>ลำดับที่</label></th>\n                        <th><label>ชนิดกระดาษ</label></th>\n                        <th><label>ความหนากระดาษ</label></th>\n                        <th><label>ขนาดถุง</label></th>\n                        <th><label>ทรง</label></th>\n                        <th><label>หูถุง</label></th>\n                        <th><label>จำนวนสีพิมพ์</label></th>\n                        <th><label>สี</label></th>\n                        <th><label>ย้อมพื้น</label></th>\n                        <th><label>สีย้อม</label></th>\n                        <th style={{width:\"200px\"}}><label>จำนวน</label></th>\n                        <th><label>ราคา</label></th>\n                        <th><label>แบบ</label></th>\n                        <th><label></label></th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    <tr><td><label>&nbsp;</label></td></tr>\n                {orderHistory.map((item, index) => {\n                    console.log(\"map\", item)\n                    return (\n                        <Fragment key={index}>\n                        <tr>\n                            <td></td>\n                            <td className={styles[\"paper-bag-order-table-work-name\"]} style={{textAlign:\"left\"}} colSpan={5}>\n                                <label style={{width:\"60%\", textAlign:\"left\", fontSize:\"25px\"}}>ชื่องาน: {item.workName}</label>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label style={{paddingLeft:\"10px\", paddingRight:\"10px\"}}>{index+1}</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.paperType}</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.paperThickness} gram</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.bagSize}</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.bagShape}</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.bagEars}</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.colorAmount}</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.colorAmount !== 0 ? item.color : \"-\"}</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.baseColorCheck ? \"ย้อม\" : \"ไม่ย้อม\"}</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.baseColorCheck ? item.baseColor : \"-\"}</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.quantity} {item.unit}</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.price}</label>\n                            </td>\n                            <td>\n                                <input type=\"button\" id=\"file-upload\" style={{display:\"none\"}}/>\n                                <button type=\"button\" onClick={()=>document.getElementById(\"file-upload\").click()}>View</button>\n                            </td>\n                            <td>\n                                <button className={styles[\"paper-bag-order-add-button\"]} type=\"button\" style={{border:\"none\"}} onClick={()=>addOrder(item)}>+</button>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label></label>\n                            </td>\n                            <td style={{paddingRight:\"0\", marginLeft:\"100px\"}} colSpan={3}>\n                                <label>ประเภท: </label>\n                                <label>{item.workType === \"sell\" ? \"งานขาย\" : \"งานพิมพ์\"}</label>\n                                <label style={{paddingRight:\"30px\"}}>&nbsp;</label>\n                            {\n                                item.workType === \"sell\" && <label>ลาย: {item.pattern}</label>\n                            }\n                            </td>\n                            <td style={{}}>\n                                <label>Comment:</label>\n                            </td>\n                            <td style={{textAlign:\"left\", verticalAlign: \"top\", border: \"2px solid #e6e6e6\", borderRadius: \"5px\"}} colSpan=\"4\">\n                                <label>{item.comment}</label>\n                            </td>\n                            <td style={{position:\"absolute\"}}>\n                                <label style={{position:\"relative\", left:\"20px\"}}>\n                                    Block เดิม\n                                </label>\n                                <input \n                                    style={{position:\"relative\"}}\n                                    type=\"checkbox\" \n                                    name=\"sameBlock\" \n                                    id=\"sameBlock\" \n                                    onChange={(event) => onDetailChangeV2(event.target.checked, index, \"sameBlock\")}\n                                />\n\n                                <label style={{position:\"relative\", left:\"20px\"}}>\n                                   สีเดิม\n                                </label>\n                                <input \n                                    style={{position:\"relative\"}}\n                                    type=\"checkbox\" \n                                    name=\"sameColor\" \n                                    id=\"sameColor\" \n                                    onChange={(event) => onDetailChangeV2(event.target.checked, index, \"sameColor\")}\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label></label>\n                            </td>\n                            <td colSpan=\"12\"><hr/></td>\n                            <td>\n                                <label></label>\n                            </td>\n                        </tr>\n                        </Fragment>\n                    )\n                })}\n                </tbody>\n            </table>\n        </div>\n        <div style={{textAlign:\"right\", marginRight:\"30px\", marginTop:\"30px\"}}>\n            <button type=\"button\" onClick={() => setShowModal(false)}>close</button>\n        </div>\n        </div>\n    )\n    \n    console.log(\"history\", orderHistory)\n\n    return (\n        <div className={styles[\"paper-bag-order\"]}>\n        <div className={styles[\"paper-bag-order-table\"]}>\n            <table>\n                <thead>\n                    <tr>\n                        <th><label style={{paddingLeft:\"10px\", paddingRight:\"10px\"}}>ลำดับที่</label></th>\n                        <th><label>ชนิดกระดาษ</label></th>\n                        <th><label>ความหนากระดาษ</label></th>\n                        <th><label>ขนาดถุง</label></th>\n                        <th><label>ทรง</label></th>\n                        <th><label>หูถุง</label></th>\n                        <th><label>จำนวนสีพิมพ์</label></th>\n                        <th><label>สี</label></th>\n                        <th><label>ย้อมพื้น</label></th>\n                        <th><label>สีย้อม</label></th>\n                        <th style={{width:\"200px\"}}><label>จำนวน</label></th>\n                        <th><label>ราคา</label></th>\n                        <th><label>แนบแบบ</label></th>\n                        <th><label></label></th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    <tr><td><label>&nbsp;</label></td></tr>\n                {orderDetails.map((item, index) => {\n                    console.log(\"map\", item)\n                    console.log(\"sc\", item.sameColor.value)\n                    console.log(\"sb\", item.sameBlock.value)\n                    if(item.sameColor.value === true){\n                        item.colorAmount.editable = false\n                        item.color.editable = false\n                        item.baseColorCheck.editable = false\n                        item.baseColor.editable = false\n                    }\n                    if(item.sameBlock.value === true){\n                        item.bagSize.editable = false\n                        item.design.editable = false\n                    }\n                    return (\n                        <Fragment key={index}>\n                        <tr>\n                            <td></td>\n                            <td className={styles[\"paper-bag-order-table-work-name\"]} style={{textAlign:\"left\"}} colSpan={5}>\n                                <input style={{width:\"60%\", textAlign:\"left\"}} type=\"text\" name=\"workName\" id=\"workName\" value={item.workName.value} disabled={!item.workName.editable} placeholder=\"ระบุชื่องาน\" onChange={(event) => onDetailChange(event.target.value, index, \"workName\")}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label style={{paddingLeft:\"10px\", paddingRight:\"10px\"}}>{index+1}</label>\n                            </td>\n                            <td>\n                                <select name=\"paperType\" id=\"paperType\" value={item.paperType.value} disabled={!item.paperType.editable} onChange={(event) => onDetailChange(event.target.value, index, \"paperType\")}>\n                                    {\n                                        menuValue.paperType.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}>{menuItem}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </td>\n                            <td>\n                                <select style={{width:\"50%\"}}name=\"paperThickness\" id=\"paperThickness\" value={item.paperThickness.value} disabled={!item.paperThickness.editable} onChange={(event) => onDetailChange(event.target.value, index, \"paperThickness\")}>\n                                    {\n                                        menuValue.paperThickness.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}>{menuItem}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                                <label>gram</label>\n                            </td>\n                            <td>\n                                <select name=\"bagSize\" id=\"bagSize\" value={item.bagSize.value} disabled={!item.bagSize.editable} onChange={(event) => onDetailChange(event.target.value, index, \"bagSize\")}>\n                                    {\n                                        menuValue.bagSize.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}>{menuItem}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </td>\n                            <td>\n                                <select name=\"bagShape\" id=\"bagShape\" value={item.bagShape.value} disabled={!item.bagShape.editable} onChange={(event) => onDetailChange(event.target.value, index, \"bagShape\")}>\n                                    {\n                                        menuValue.bagShape.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}>{menuItem}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </td>\n                            <td>\n                                <select name=\"bagEars\" id=\"bagEars\" value={item.bagEars.value} disabled={!item.bagEars.editable} onChange={(event) => onDetailChange(event.target.value, index, \"bagEars\")}>\n                                    {\n                                        menuValue.bagEars.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}>{menuItem}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </td>\n                            <td>\n                                <input type=\"number\" min={menuValue.colorAmount.min} max={menuValue.colorAmount.max} name=\"colorAmount\" id=\"colorAmount\" value={item.colorAmount.value} disabled={!item.colorAmount.editable} onChange={(event) => onDetailChange(event.target.value, index, \"colorAmount\")}/>\n                            </td>\n                            {\n                                item.color.editable = item.colorAmount.value != 0 && item.colorAmount.editable\n                            }\n                            <td>\n                                <input list=\"color\" name=\"color\" value={item.colorAmount.value == 0 ? \"\" : item.color.value} disabled={!item.color.editable} placeholder=\"ระบุสี\" onChange={(event) => onDetailChange(event.target.value, index, \"color\")}/>\n                                <datalist id=\"color\">\n                                {\n                                    menuValue.color.map((menuItem, subIndex) => {\n                                        return (\n                                            <option key={subIndex} value={menuItem}/>\n                                        )\n                                    })\n                                }\n                                </datalist>\n                            </td>\n                            <td>\n                                <input type=\"checkbox\" name=\"baseColorCheck\" id=\"baseColorCheck\" checked={item.baseColorCheck.value} disabled={!item.baseColorCheck.editable} onChange={(event) => {\n                                onDetailChange(event.target.checked, index, \"baseColorCheck\")\n                                }\n                            }\n                            />\n                            </td>\n                            {\n                                item.baseColor.editable = item.baseColorCheck.value && item.baseColorCheck.editable\n                            }\n                            <td>\n                                <input list=\"baseColor\" name=\"baseColor\" value={item.baseColorCheck.value ? item.baseColor.value : \"\"} disabled={!item.baseColor.editable} placeholder=\"ระบุสี\" onChange={(event) => onDetailChange(event.target.value, index, \"baseColor\")}/>\n                                    <datalist id=\"baseColor\">\n                                    {\n                                        menuValue.baseColor.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}/>\n                                            )\n                                        })\n                                    }\n                                  </datalist>\n                            </td>\n                            <td>\n                                <input style={{width: \"50px\"}}type=\"number\" min={menuValue.quantity.min} name=\"quantity\" id=\"quantity\" value={item.quantity.value} disabled={!item.quantity.editable} onChange={(event) => onDetailChange(event.target.value, index, \"quantity\")}/>\n                                <select style={{width: \"70px\"}}name=\"unit\" id=\"unit\" value={item.unit.value} disabled={!item.unit.editable} onChange={(event) => onDetailChange(event.target.value, index, \"unit\")}>\n                                    {\n                                        menuValue.unit.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}>{menuItem}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </td>\n                            <td>\n                                <input type=\"number\" min={menuValue.price.min} name=\"price\" id=\"price\" value={item.price.value} disabled={!item.price.editable} onChange={(event) => onDetailChange(event.target.value, index, \"price\")}/>\n                            </td>\n                            <td>\n                                <input type=\"file\" id=\"file-upload\" style={{display:\"none\"}}/>\n                                <button type=\"button\" disabled={!item.design.editable} onClick={()=>document.getElementById(\"file-upload\").click()}>Upload</button>\n                            </td>\n                            <td>\n                                <button className={styles[\"paper-bag-order-table-delete-button\"]} type=\"button\" style={{border:\"none\"}} onClick={()=>removeOrder(index)}>X</button>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label></label>\n                            </td>\n                            <td style={{textAlign:\"right\", paddingRight:\"0\"}}>\n                                <label>งานขาย</label>\n                                <br/>\n                                <label>งานพิมพ์</label>\n                            </td>\n                            <td style={{textAlign:\"left\", paddingLeft:\"0\"}}>\n                                <input type=\"radio\" name={\"workType\"+index} id=\"workType\" checked={item.workType.value === menuValue.workType.sell?\"checked\":\"\"} value={menuValue.workType.sell} disabled={!item.workType.editable} onChange={(event) => onDetailChange(event.target.value, index, \"workType\")}/>\n                                <br/>\n                                <input type=\"radio\" name={\"workType\"+index} id=\"workType\" checked={item.workType.value === menuValue.workType.print?\"checked\":\"\"} value={menuValue.workType.print} disabled={!item.workType.editable} onChange={(event) => onDetailChange(event.currentTarget.value, index, \"workType\")}/>\n                            </td>\n                            {\n                                item.pattern.editable = item.workType.value === \"print\"? false:true\n                            }\n                            <td style={{position: \"absolute\"}}>\n                                <select style={{width: \"70px\", position: \"relative\", top: \"25px\", left: \"-70px\"}} name=\"pattern\" id=\"pattern\" value={item.pattern.value} disabled={!item.pattern.editable} onChange={(event) => onDetailChange(event.target.value, index, \"pattern\")}>\n                                    {\n                                        menuValue.pattern.map((menuItem, subIndex) => {\n                                            return (\n                                                <option key={subIndex} value={menuItem}>{menuItem}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </td>\n                            <td style={{}}>\n                                <label>Comment:</label>\n                            </td>\n                            <td style={{textAlign:\"left\", verticalAlign: \"top\"}} colSpan=\"4\">\n                                <textarea style={{width:\"100%\", height:\"70px\"}} value={item.comment.value} disabled={!item.comment.editable} onChange={(event) => onDetailChange(event.target.value, index, \"comment\")}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label></label>\n                            </td>\n                            <td colSpan=\"12\"><hr/></td>\n                            <td>\n                                <label></label>\n                            </td>\n                        </tr>\n                        </Fragment>\n                    )\n                })}\n                </tbody>\n\n            </table>\n        </div>\n        <button className={styles[\"paper-bag-order-add-order-button\"]} type=\"button\" onClick={addNewOrder}>+Add Order</button>\n        <button type=\"button\" onClick={() => {setOrderHistory(getOrderHistory(customerName));setShowModal(true)}}>Order history</button>\n        <button className={styles[\"paper-bag-order-clear-button\"]} type=\"button\" onClick={clearItem}>Clear All Order</button>\n        <Modal style={{width:\"1700px\"}} content={modalContent} showModal={showModal} setShowModal={setShowModal}/>\n        </div>\n    )\n}\nexport default PaperBagOrder;\n","import { useMemo, useState } from \"react\"\nimport Modal from \"../../../../ui/modal/Modal\"\nimport styles from \"./NameForm.module.css\"\nimport BackEndInterface from \"../../../../../BackEndInterface\"\n\nconst getCustomerData = () => {\n    return BackEndInterface.getCustomer()\n}\n\nconst NameForm = ({nameForm, setNameForm}) => {\n    const [showModal, setShowModal] = useState(false)\n    const [searchResult, setSearchResult] = useState([])\n    const [name, setName] = useState(\"\")\n    const [date, setDate] = useState(\"\")\n    \n    const onFormChange = (event, prop) => {\n        console.log(event.target.value)\n        setNameForm({...nameForm, [prop]:{value:event.target.value, editable:true}})\n    }\n\n    const clearForm = () => {\n       const clearName = {\n           name: {value:\"\", editable:true},\n           address: {value:\"\", editable:true},\n           date: {value:\"\" , editable:true},\n           deadline: {value:\"\", editable:true}\n       }\n        setNameForm(clearName)\n    }\n\n    const onSelectName = (item) => {\n       const selectedName = {\n           name: {value:item.name, editable:false},\n           address: {value:item.address, editable:false},\n           date: {value:nameForm.date.value, editable:true},\n           deadline: {value:nameForm.deadline.value, editable:true}\n       }\n        setNameForm(selectedName)\n        setShowModal(false)\n    }\n    const addDays = (date, days) => {\n        var result = new Date(date);\n        result.setDate(result.getDate() + days);\n        return result;\n    }\n\n    const updateDeadline = (date, days) => {\n        if(nameForm.deadline.value === \"\" && nameForm.date.value !== \"\")\n            setNameForm({...nameForm, [\"deadline\"]:{value:addDays(date, days).toISOString().split(\"T\")[0], editable:true}}) \n    }\n\n    const updateDeadlineMemo = useMemo(() => {\n        updateDeadline(nameForm.date.value, 30)\n    }, [nameForm.date.value]) \n\n    const fetchName = () => {\n        let temp = []\n        const customerData = getCustomerData() \n        customerData.map((item) => {\n            if(name !== \"\"){\n                if(item.name.toLowerCase().search(name.toLowerCase()) >= 0){\n                    temp = [...temp, item] \n                }\n            }\n        })\n        setSearchResult(temp)\n    }\n\n    const onNameChange = useMemo(fetchName, [name])\n\n    const modalContent = (\n        <div style={{padding:\"30px\"}}>\n            <table>\n                <tbody>\n                    <tr>\n                        <td><label>นามลูกค้า</label></td>\n                        <td>\n                            <input type=\"text\" value={name} onChange={(event) => {setName(event.target.value);}}/>\n                            {onNameChange}\n                        </td>\n                        <button type=\"button\" onClick={fetchName}>🔍</button>\n                    </tr>\n                </tbody>\n            </table>\n            <div style={{height: \"300px\", overflowY:\"scroll\"}}>\n                <table className={styles[\"modal-content\"]} style={{width:\"100%\"}}>\n                    <tbody>\n                        {\n                            searchResult.map((item, index) => {\n                                return (\n                                    <>\n                                    <tr>\n                                        <td>\n                                            <span>{item.name}</span>\n                                        </td>\n                                        <td>\n                                            <span style={{border: \"2px solid #e8e8e8\"}}>{item.address}</span>\n                                        </td>\n                                        <td>\n                                            <button type=\"button\" onClick={()=>onSelectName(item)}>Select</button>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"11\"><hr/></td>\n                                    </tr>\n                                    </>\n                                )\n                            }\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n            <div style={{textAlign:\"right\", marginRight:\"30px\", marginTop:\"30px\"}}>\n                <button type=\"button\" onClick={() => setShowModal(false)}>close</button>\n            </div>\n        </div>\n    )\n\n    return (\n        <div className={styles[\"paper-bag-order-form\"]}>\n            <table>\n                <tbody>\n                    <tr>\n                        <td>\n                            <button type=\"button\" onClick={() => setShowModal(true)}>Old Customer?</button>\n                        </td>\n                        <td style={{textAlign: \"right\"}}>\n                            <label>นามลูกค้า:</label> \n                        </td>\n                        <td>\n                            <input type=\"text\" id=\"name\" name=\"name\" value={nameForm.name.value} disabled={!nameForm.name.editable} onChange={(event) => onFormChange(event, \"name\")} style={{minWidth: \"300px\"}}/>\n                        </td>\n                        <td>\n                            <label>วันที่:</label> \n                        </td>\n                        <td>\n                            <input type=\"date\" id=\"date\" name=\"date\" value={nameForm.date.value} disabled={!nameForm.date.editable} onChange={(event) => { onFormChange(event, \"date\") } } />\n                        </td>\n                        {updateDeadlineMemo}\n                        <td>\n                            <label>กำหนดส่ง:</label> \n                        </td>\n                        <td>\n                            <input type=\"date\" id=\"deadline\" name=\"deadline\" value={nameForm.deadline.value} disabled={!nameForm.deadline.editable} onChange={(event) => onFormChange(event, \"deadline\")}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <label></label>\n                        </td>\n                        <td style={{textAlign:\"right\", verticalAlign: \"top\"}}>\n                            <label>ที่อยู่:</label> \n                        </td>\n                        <td style={{textAlign:\"left\"}} colSpan={3}>\n                            <textarea style={{width:\"95%\", height:\"100px\"}}type=\"text\" id=\"address\" name=\"address\" value={nameForm.address.value} disabled={!nameForm.address.editable} onChange={(event) => onFormChange(event, \"address\")}/>\n                        </td>\n                        <td>\n                            <label></label>\n                        </td>\n                        <td>\n                            <button className={styles[\"paper-bag-order-form-clear-button\"]} type=\"button\" onClick={clearForm}>\n                                Clear form\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <Modal style={{width:\"1000px\"}} content={modalContent} showModal={showModal} setShowModal={setShowModal}/>\n        </div>\n    )\n}\n\nexport default NameForm;\n","import { useState } from \"react\"\nimport PaperBagOrder from \"./PaperBagOrderForm\"\nimport NameForm from \"./NameForm\"\nimport styles from \"./OpenPaperBagOrderForm.module.css\"\nimport \"./container.css\"\nimport BackEndInterface from \"../../../../../BackEndInterface\"\nimport Modal from \"../../../../ui/modal/Modal\"\n\nconst getPaperType = () => {\n    return [\"KW\", \"KI\", \"กระดาษขาว\", \"KA\", \"ART\"]\n}\n\nconst getPaperThickness = () => {\n    return [\"thick1\", \"thick2\"]\n}\n\nconst getShape = () => {\n    return [\"ตั้ง\", \"ขวาง\"]\n}\n\nconst getBagEar = () => {\n    return [\"หูเจาะ\", \"หูช็อปปิ้ง\", \"หูเชือก\", \"เกลียวมัด\"]\n}\n\nconst getColorAmount = () => {\n    return {min:0, max:4}\n}\n\nconst getQuantity = () => {\n    return {min:1}\n}\n\nconst getUnit = () => {\n    return [\"ใบ\",\"กิโล\",\"ลูก\"]\n}\n\nconst getPrice = () => {\n    return {min:0}\n}\n\nconst getWorkType = () => {\n    return {sell:\"sell\", print:\"print\"}\n}\n\nconst getPattern = () => {\n    return [\"pattern1\", \"pattern2\"] \n}\n\nconst getBagSize = () => {\n    let bagSize = []\n\n    for(let i = 0; i < 24; i++){\n        bagSize = [...bagSize, \"ตัด\"+ (i+1)]\n    }\n\n    return bagSize\n}\n\nconst getDesign = () => {\n    return \"\"\n}\n\nconst getColor = () => {\n    //get from database\n    return BackEndInterface.getBaseColor()\n}\n\nconst getBaseColor = () => {\n    //get from database\n    return BackEndInterface.getBaseColor()\n}\n\nconst sentDataToBackEnd = (order) => {\n    BackEndInterface.sentOrder(order)\n}\n\nconst OpenPaperBagOrderForm = () => {\n    const [showCheckWorkNameModal, setShowCheckWorkNameModal] = useState(false)\n    const [showCheckNameFormModal, setShowCheckNameFormModal] = useState(false)\n    const [orderDetails, setOrderDetails] = useState([])\n    const [addVAT, setAddVAT] = useState(false)\n    const [nameForm, setNameForm] = useState({\n        name:{value:\"\", editable:true},\n        date:{value:\"\", editable:true},\n        deadline:{value:\"\", editable:true},\n        address:{value:\"\", editable:true}\n    })\n\n    const resetPageValue = () => {\n        setShowCheckNameFormModal(false)\n        setShowCheckWorkNameModal(false)\n        setOrderDetails([])\n        setAddVAT(false)\n        setNameForm({\n                name:{value:\"\", editable:true},\n                date:{value:\"\", editable:true},\n                deadline:{value:\"\", editable:true},\n                address:{value:\"\", editable:true}\n        })\n    }\n\n    const menuValue = {\n        workName:\"\",\n        paperType: getPaperType(),\n        paperThickness: getPaperThickness(),\n        bagSize: getBagSize(),\n        bagShape: getShape(),\n        bagEars: getBagEar(),\n        colorAmount: getColorAmount(),\n        color: getColor(),\n        baseColorCheck:false,\n        baseColor:getBaseColor(),\n        quantity: getQuantity(),\n        unit: getUnit(),\n        price: getPrice(),\n        comment:\"\",\n        workType: getWorkType(),\n        pattern: getPattern(),\n        design: getDesign(),\n        sameBlock: false,\n        sameColor: false\n    }\n\n    const checkPrice = () => {\n        let status = false\n        orderDetails.map((item, index) => {\n            if(item.price.value == 0){\n                status = true\n            }\n        }) \n        \n        return status\n    }\n\n    const checkWorkName = () => {\n        let status = false\n        orderDetails.map((item, index) => {\n            if(item.workName.value == 0){\n                status = true\n            }\n        }) \n        \n        return status\n    }\n\n    const checkNameForm = () => {\n        let status = false\n\n        console.log(\"form\", nameForm)\n        if(nameForm.name.value === \"\" || nameForm.address.value === \"\" || nameForm.date.value === \"\" || nameForm.deadline.value === \"\"){\n            status = true\n        }\n\n        return status\n    }\n\n    const packDataAndSent = () => {\n        let order = []  \n\n        if(checkNameForm()){\n            setShowCheckNameFormModal(true)\n            return\n        }\n\n        if(checkWorkName()){\n            setShowCheckWorkNameModal(true)\n            return\n        }\n        orderDetails.map((item) => {\n            const data = {\n                date:               nameForm.date.value,\n                deadline:           nameForm.deadline.value,\n                name:               nameForm.name.value,\n                address:            nameForm.address.value,\n                workName:           item.workName.value,\n                paperType:          item.paperType.value,\n                paperThickness:     item.paperThickness.value,\n                bagSize:            item.bagSize.value,\n                bagShape:           item.bagShape.value,\n                bagEars:            item.bagEars.value,\n                colorAmount:        item.colorAmount.value,\n                color:              item.color.value,\n                baseColorCheck:     item.baseColorCheck.value,\n                baseColor:          item.baseColor.value,\n                quantity:           item.quantity.value,\n                unit:               item.unit.value,\n                price:              item.price.value,\n                workType:           item.workType.value,\n                pattern:            item.pattern.value,\n                comment:            item.comment.value,\n                sameBlock:          item.sameBlock,\n                sameColor:          item.sameColor,\n                vat:                addVAT ? \"7%\" : \"\",\n                bagType:            \"กระดาษ\",\n            }\n            order = [...order, data]\n        })\n        console.log(order)\n        sentDataToBackEnd(order)\n        alert(\"Success!\")\n        resetPageValue()\n    }\n\n    const calprice = () => {\n        let sum = 0\n        orderDetails.map((item)=>{\n            let vat = 0\n            if(addVAT){\n                vat = item.price.value * item.quantity.value * 0.07\n            }\n            sum += item.price.value * item.quantity.value + vat\n        })\n\n        return sum\n    }\n    const modalContentWorkNameCheck = (\n        <div style={{padding:\"30px\"}}>\n            <label>โปรดระบุชื่องานให้ครบทุกลำดับ</label>\n            <div style={{textAlign:\"right\", marginRight:\"30px\", marginTop:\"30px\"}}>\n                <button type=\"button\" onClick={() => setShowCheckWorkNameModal(false)}>close</button>\n            </div>\n        </div>\n    )\n\n    const modalContentNameFormCheck = (\n        <div style={{padding:\"30px\"}}>\n            <label>โปรดระบุรายละเอียดลูกค้าให้ครบถ้วน</label>\n            <div style={{textAlign:\"right\", marginRight:\"30px\", marginTop:\"30px\"}}>\n                <button type=\"button\" onClick={() => setShowCheckNameFormModal(false)}>close</button>\n            </div>\n        </div>\n    )\n\n    return (\n        <div style={{marginBottom:\"100px\"}}>\n            <div className={styles[\"paper-bag-order-form\"]}>\n                <center><h1>ใบสั่งพิมพ์ ORDER กระดาษ</h1></center>\n                <div className=\"container\">\n                    <NameForm nameForm={nameForm} setNameForm={setNameForm}/>\n                    <PaperBagOrder orderDetails={orderDetails} setOrderDetails={setOrderDetails} menuValue={menuValue} customerName={nameForm.name.value}/>\n                    <label>VAT 7%</label>\n                    <input type=\"checkbox\" name=\"VAT\" id=\"VAT\" checked={addVAT} onChange={(event) => setAddVAT(event.target.checked)}/>\n                    <input type=\"button\" id=\"file-upload\" style={{display:\"none\"}}/>\n                    <div style={{display:\"inline-block\", margin:\"0 10px\"}}>\n                        <div style={{display:\"inline-block\", padding: \"0 5px\", width: \"50px\", textAlign: \"right\", border: \"2px solid #d7d7d7\", borderRadius:\"5px\"}}>\n                            <label>{calprice()}</label>\n                        </div>\n                        <label>Baht</label>\n                    </div>\n                    <button type=\"button\" onClick={()=>document.getElementById(\"file-upload\").click()}>OP/แบหลักฐานการสั่งซื้อ</button><br/><br/>\n                    <button type=\"button\" disabled={orderDetails.length > 0 ? false : true} onClick={packDataAndSent}>Submit</button>\n                    {checkPrice() ? <label style={{color: \"#ee0000\"}}>คำเตือน: พบรายการที่ราคาเท่ากับ 0</label> : null}\n                    <Modal style={{width:\"500px\"}} content={modalContentWorkNameCheck} showModal={showCheckWorkNameModal} setShowModal={setShowCheckWorkNameModal}/>\n                    <Modal style={{width:\"500px\"}} content={modalContentNameFormCheck} showModal={showCheckNameFormModal} setShowModal={setShowCheckNameFormModal}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default OpenPaperBagOrderForm;\n","import { Fragment, useState} from \"react\" \nimport styles from \"./OrderStatus.module.css\"\nimport BackEndInterface from \"../../../../../BackEndInterface\"\n\nconst getOrderHistory = (name=\"\") => {\n    console.log(name)\n    return BackEndInterface.getOrderHistory(name)\n}\n\nconst OrderStatus = ()=>{\n    const [orderHistory, setOrderHistory] = useState(getOrderHistory())\n\n    return (\n        <div style={{padding: \"30px\"}}>\n        <div className={styles[\"order-status-table\"]}>\n            <table>\n                <thead>\n                    <tr>\n                        <th><label style={{paddingLeft:\"10px\", paddingRight:\"10px\"}}>ลำดับที่</label></th>\n                        <th><label>วันที่/เวลา</label></th>\n                        <th><label>เลขที่ออร์เดอร์</label></th>\n                        <th><label>ชื่อลูกค้า</label></th>\n                        <th><label>ประเภทถุง</label></th>\n                        <th><label>ชนิดกระดาษ</label></th>\n                        <th><label>ความหนากระดาษ</label></th>\n                        <th><label>ขนาดถุง</label></th>\n                        <th><label>ทรง</label></th>\n                        <th><label>หูถุง</label></th>\n                        <th><label>จำนวนสีพิมพ์</label></th>\n                        <th><label>สี</label></th>\n                        <th><label>ย้อมพื้น</label></th>\n                        <th><label>สีย้อม</label></th>\n                        <th style={{width:\"200px\"}}><label>จำนวน</label></th>\n                        <th><label>ราคา</label></th>\n                        <th><label>แบบ</label></th>\n                        <th><label></label></th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    <tr><td><label>&nbsp;</label></td></tr>\n                {orderHistory.map((item, index) => {\n                    console.log(\"map\", item)\n                    return (\n                        <Fragment key={index}>\n                        <tr>\n                            <td></td>\n                            <td className={styles[\"order-status-table-work-name\"]} style={{textAlign:\"left\"}} colSpan={5}>\n                                <label style={{width:\"60%\", textAlign:\"left\", fontSize:\"25px\"}}>ชื่องาน: {item.workName}</label>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label style={{paddingLeft:\"10px\", paddingRight:\"10px\"}}>{index+1}</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.paperType}</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.paperThickness} gram</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.bagSize}</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.bagShape}</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.bagEars}</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.colorAmount}</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.colorAmount !== 0 ? item.color : \"-\"}</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.baseColorCheck ? \"ย้อม\" : \"ไม่ย้อม\"}</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.baseColorCheck ? item.baseColor : \"-\"}</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.quantity} {item.unit}</label>\n                            </td>\n                            <td>\n                                <label style={{width:\"60%\", textAlign:\"left\"}}>{item.price}</label>\n                            </td>\n                            <td>\n                                <input type=\"button\" id=\"file-upload\" style={{display:\"none\"}}/>\n                                <button type=\"button\" onClick={()=>document.getElementById(\"file-upload\").click()}>View</button>\n                            </td>\n                            <td>\n                                <button className={styles[\"order-status-add-button\"]} type=\"button\" style={{border:\"none\"}} onClick={()=>{}}>View</button>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label></label>\n                            </td>\n                            <td style={{paddingRight:\"0\", marginLeft:\"100px\"}} colSpan={3}>\n                                <label>ประเภท: </label>\n                                <label>{item.workType === \"sell\" ? \"งานขาย\" : \"งานพิมพ์\"}</label>\n                                <label style={{paddingRight:\"30px\"}}>&nbsp;</label>\n                            {\n                                item.workType === \"sell\" && <label>ลาย: {item.pattern}</label>\n                            }\n                            </td>\n                            <td style={{}}>\n                                <label>Comment:</label>\n                            </td>\n                            <td style={{textAlign:\"left\", verticalAlign: \"top\", border: \"2px solid #e6e6e6\", borderRadius: \"5px\"}} colSpan=\"4\">\n                                <label>{item.comment}</label>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label></label>\n                            </td>\n                            <td colSpan=\"12\"><hr/></td>\n                            <td>\n                                <label></label>\n                            </td>\n                        </tr>\n                        </Fragment>\n                    )\n                })}\n                </tbody>\n            </table>\n        </div>\n        </div>\n       \n    )\n}\n\nexport default OrderStatus;\n","import { useParams } from \"react-router\";\nimport Banner from \"../../ui/banner/Banner\";\nimport OpenPaperBagOrderForm from \"./content/openPaperBagOrderForm/OpenPaperBagOrderForm\";\nimport OrderStatus from \"./content/orderStatus/OrderStatus\";\n\nconst Sales = () => {\n    const {type} = useParams()\n    console.log(type)\n\n    const Content = () => {\n        switch(type){\n            case \"open-paper-bag-order\":\n                return (\n                    <OpenPaperBagOrderForm/>\n                )\n            case \"open-plastic-bag-order\":\n                return (\n                    <OrderStatus/>\n                )\n            default:\n                return (\n                    <></> \n                )\n        }\n    }\n\n    return (\n        <>\n            <Banner role=\"Sales\"\n                menu={[\n                    {\n                        path:\"/sales/open-paper-bag-order\",\n                        text:\"เปิดออร์เดอร์ถุงกระดาษ\"\n                    },\n                    {\n                        path:\"/sales\",\n                        text:\"เปิดออร์เดอร์ถุงพลาสติก\"\n                    },\n                    {\n                        path:\"/sales\",\n                        text:\"Rejected order\"\n                    },\n                    {\n                        path:\"/sales/open-plastic-bag-order\",\n                        text:\"สถานะออร์เดอร์\"\n                    },\n                ]}\n            />\n            <Content/>\n        </>\n    )\n}\n\nexport default Sales;\n","import {Routes, Route, Navigate} from \"react-router-dom\"\nimport Login from \"./components/pages/login/Login\"\nimport Sales from \"./components/pages/sales/Sales\"\n\nconst RoutePath = () => {\n    return (\n        <Routes>\n            <Route path=\"/login\" element={<Login/>}/>\n            <Route path=\"/sales/:type\" element={<Sales/>}/>\n            <Route path=\"/sales\" element={<Sales/>}/>\n            <Route path=\"/\" element={<Navigate to=\"login\"/>}/>\n        </Routes>\n    )\n}\n\nexport {RoutePath, Navigate};\n","import {RoutePath} from \"./RoutePath\";\nimport { HashRouter as Router} from \"react-router-dom\";\n\nconst App = () => {\n    return (\n        <>\n            <Router>\n                <RoutePath/>\n            </Router>\n        </>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n          <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}